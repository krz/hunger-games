{"version":3,"file":"static/js/994.f77743c9.chunk.js","mappings":"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","sources":["components/QuestionFilter/const.js","components/QuestionFilter/useFilterSearch.js","components/ZoomableImage.tsx","externalApi.js","hooks/useUrlParams.js","pages/packaging/Row.tsx","pages/packaging/useBuffer.ts","hooks/useOptions.ts","pages/packaging/index.tsx","pages/questions/utils.ts","robotoff.ts","utils.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["export const DEFAULT_FILTER_STATE = {\n  insightType: \"brand\",\n  brandFilter: \"\",\n  countryFilter: \"\",\n  sortByPopularity: true,\n  valueTag: \"\",\n  campaign: \"\",\n};\n\nexport const campagnes = [\"agribalyse-category\"];\n\nexport const countryNames = [\n  \"\",\n  \"en:australia\",\n  \"en:belgium\",\n  \"en:canada\",\n  \"en:croatia\",\n  \"en:denmark\",\n  \"en:france\",\n  \"en:germany\",\n  \"en:italy\",\n  \"en:netherlands\",\n  \"en:portugal\",\n  \"en:spain\",\n  \"en:sweden\",\n  \"en:switzerland\",\n  \"en:united-kingdom\",\n  \"en:united-states\",\n];\n\nexport const insightTypesNames = {\n  label: \"label\",\n  category: \"category\",\n  brand: \"brand\",\n  product_weight: \"product_weight\",\n  packaging: \"packaging\",\n};\n\nexport const key2urlParam = {\n  valueTag: \"value_tag\",\n  brandFilter: \"brand\",\n  countryFilter: \"country\",\n  insightType: \"type\",\n  sortByPopularity: \"sorted\",\n  campaign: \"campaign\",\n};\n\nconst urlParams2Key = {};\nObject.entries(key2urlParam).forEach(([key, value]) => {\n  urlParams2Key[value] = key;\n});\n\nexport { urlParams2Key };\n","import * as React from \"react\";\n\nimport { key2urlParam, urlParams2Key, DEFAULT_FILTER_STATE } from \"./const\";\nimport { localFavorites } from \"../../localeStorageManager\";\nimport logo from \"../../assets/logo.png\";\nimport useUrlParams, {\n  convertObjectParamsToUrlParams,\n} from \"../../hooks/useUrlParams\";\n\nconst convertParamsToUrl = (params) => {\n  const rep = {};\n  Object.keys(params).forEach((key) => {\n    rep[key2urlParam[key]] = params[key];\n  });\n  return rep;\n};\n\nconst convertUrlToParams = (params) => {\n  const rep = {};\n  Object.keys(params).forEach((key) => {\n    rep[urlParams2Key[key]] = params[key];\n  });\n  return rep;\n};\n\nconst DEFAULT_FILTER_URL_PARAMS = convertParamsToUrl(DEFAULT_FILTER_STATE);\n\nexport const getQuestionSearchParams = (params) =>\n  convertObjectParamsToUrlParams(convertParamsToUrl(params));\n\nexport function useFilterSearch() {\n  // Search filter is a bit special because it's the first API we created and url_params are reused in other applications.\n  // To avoid breaking deep link, we maintainthe previouse search params in url, but use more detailed on in the app\n  // This hook do the translation\n\n  const [urlSearchParams, setUrlSearchParams] = useUrlParams(\n    DEFAULT_FILTER_URL_PARAMS,\n    { valueTag: [\"value_tag\", \"value\"] }\n  );\n  const exposedParameters = React.useMemo(\n    () => convertUrlToParams(urlSearchParams),\n    [urlSearchParams]\n  );\n\n  const [isFavorite, setIsFavorite] = React.useState(\n    localFavorites.isSaved(exposedParameters)\n  );\n\n  const setSearchParams = React.useCallback(\n    (modifier) => {\n      let newExposedParameters;\n      if (typeof modifier === \"function\") {\n        newExposedParameters = modifier(exposedParameters);\n      } else {\n        newExposedParameters = modifier;\n      }\n\n      const isDifferent = Object.keys(DEFAULT_FILTER_STATE).some(\n        (key) => newExposedParameters[key] !== exposedParameters[key]\n      );\n\n      if (!isDifferent) {\n        return;\n      }\n\n      setIsFavorite(localFavorites.isSaved(newExposedParameters));\n      setUrlSearchParams(convertParamsToUrl(newExposedParameters));\n    },\n    [exposedParameters, setUrlSearchParams]\n  );\n\n  const toggleFavorite = React.useCallback(\n    (imageSrc = logo, title = \"\") => {\n      const isSaved = localFavorites.isSaved(exposedParameters);\n\n      if (isSaved) {\n        localFavorites.removeQuestion(exposedParameters);\n      } else {\n        localFavorites.addQuestion(exposedParameters, logo, title);\n      }\n\n      setIsFavorite(!isSaved);\n    },\n    [exposedParameters]\n  );\n\n  return [exposedParameters, setSearchParams, isFavorite, toggleFavorite];\n}\n","import * as React from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { alpha } from \"@mui/material/styles\";\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\n\nimport RotateLeftIcon from \"@mui/icons-material/RotateLeft\";\nimport RotateRightIcon from \"@mui/icons-material/RotateRight\";\nimport OpenInFullIcon from \"@mui/icons-material/OpenInFull\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\n\nconst ZoomableImage = (props) => {\n  const { src, srcFull, zoomIn, imageProps, ...other } = props;\n\n  const apiRef = React.useRef(null);\n  const [rotation, setRotation] = React.useState(0);\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  return (\n    <>\n      <div {...other} style={{ ...other.style, position: \"relative\" }}>\n        {zoomIn ? (\n          <TransformWrapper>\n            <TransformComponent>\n              <img src={src} alt=\"\" {...imageProps} />\n            </TransformComponent>\n          </TransformWrapper>\n        ) : (\n          <img src={src} alt=\"\" {...imageProps} />\n        )}\n        <IconButton\n          onClick={() => {\n            setIsOpen(true);\n          }}\n          sx={(theme) => ({\n            position: \"absolute\",\n            color: \"white\",\n            backgroundColor: alpha(theme.palette.secondary.main, 0.5),\n            bottom: 5,\n            right: 5,\n          })}\n        >\n          <OpenInFullIcon />\n        </IconButton>\n      </div>\n      <Dialog\n        open={isOpen}\n        onClose={() => {\n          setIsOpen(false);\n        }}\n        maxWidth=\"xl\"\n        fullScreen={fullScreen}\n      >\n        <Box\n          sx={{\n            p: 1,\n            display: \"flex\",\n            flexDirection: \"row-reverse\",\n          }}\n        >\n          <IconButton onClick={() => setIsOpen(false)}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n        <Divider />\n        <DialogContent\n          sx={{\n            p: { xs: 1, md: 2 },\n          }}\n        >\n          <TransformWrapper limitToBounds={false} ref={apiRef}>\n            <TransformComponent>\n              <img\n                src={srcFull ?? src}\n                alt=\"\"\n                style={{\n                  maxHeight: \"calc(100vh - 160px )\",\n                  maxWidth: \"min(100%, 1400px)\",\n                  transform: `rotate(${rotation * 90}deg)`,\n                  transformOrigin: \"center\",\n                }}\n              />\n            </TransformComponent>\n          </TransformWrapper>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            onClick={() => {\n              setRotation((prev) => prev - 1);\n            }}\n            startIcon={<RotateLeftIcon />}\n          >\n            left\n          </Button>\n          <Button\n            fullWidth\n            onClick={() => {\n              setRotation(0);\n              apiRef.current?.resetTransform();\n            }}\n          >\n            Reset\n          </Button>\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            onClick={() => {\n              setRotation((prev) => prev + 1);\n            }}\n            endIcon={<RotateRightIcon />}\n          >\n            right\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ZoomableImage;\n","import axios from \"axios\";\n\nexport const addImageFlag = ({ barcode, imgid, url }) => {\n  axios\n    .put(`https://amathjourney.com/api/off-annotation/flag-image/${barcode}`, {\n      mode: \"no-cors\",\n      imgid,\n      url,\n    })\n    .catch(() => {\n      console.log(\"Image flagged\");\n    });\n};\n\nexport const removeImageFlag = ({ barcode, imgid }) => {\n  axios\n    .delete(\n      `https://amathjourney.com/api/off-annotation/flag-image/${barcode}`,\n      {\n        mode: \"no-cors\",\n        data: {\n          imgid,\n        },\n      }\n    )\n    .catch(() => {\n      console.log(\"Something went wrong. Image could not be flagged\");\n    });\n};\n\nconst externalApi = {\n  addImageFlag,\n  removeImageFlag,\n};\n\nexport default externalApi;\n","import * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const setUrlParams = (parameters, defaultParameters) => {\n  const newRelativePathQuery = `${\n    window.location.pathname\n  }?${convertObjectParamsToUrlParams(parameters, defaultParameters)}`;\n  window.history.pushState(null, \"\", newRelativePathQuery);\n};\n\nexport const getDefaultizedUrlParams = (defaultParameters, synonyms = {}) => {\n  const parameters = { ...defaultParameters };\n  const urlParams = new URLSearchParams(window.location.search);\n  Object.keys(defaultParameters).forEach((key) => {\n    const value = urlParams.get(key);\n    if (value !== null && JSON.stringify(defaultParameters[key]) !== value) {\n      if (value === \"true\" || value === \"false\") {\n        parameters[key] = JSON.parse(value);\n      } else {\n        parameters[key] = value;\n      }\n    }\n  });\n\n  Object.entries(synonyms).forEach(([valueKey, synonymKeys]) => {\n    const toTest =\n      typeof synonymKeys === \"string\" ? [synonymKeys] : synonymKeys;\n    toTest.forEach((synonymKey) => {\n      const value = urlParams.get(synonymKey);\n      if (\n        value !== null &&\n        JSON.stringify(defaultParameters[valueKey]) !== value\n      ) {\n        if (value === \"true\" || value === \"false\") {\n          parameters[valueKey] = JSON.parse(value);\n        } else {\n          parameters[valueKey] = value;\n        }\n      }\n    });\n  });\n\n  return parameters;\n};\n\nexport const convertObjectParamsToUrlParams = (\n  parameters,\n  defaultParameters\n) => {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  Object.keys(parameters).forEach((key) => {\n    if (JSON.stringify(parameters[key]) !== urlParams.get(key)) {\n      urlParams.set(key, parameters[key]);\n    }\n  });\n\n  if (defaultParameters !== undefined) {\n    Object.keys(defaultParameters).forEach((key) => {\n      if (\n        urlParams.get(key) !== null &&\n        defaultParameters[key] === parameters[key]\n      ) {\n        // Already in default. We can remove it\n        urlParams.delete(key);\n      }\n    });\n  }\n\n  return urlParams.toString();\n};\n\n/**\n * Hook that works as useState to keep in sync with URL query params\n * @param {object} defaultParams The object to get from the URL\n * @param {object} synonyms The synonmys under the form { valueKeyA: ['synonymA1', 'synsonymA2'], valueKeyB: 'synsonlymB1' }.\n * If the urls containg a paramter named `synonymA1` it will be used to override valueKeyA value.\n * @returns [state, setState]\n */\nconst useUrlParams = (defaultParams, synonyms) => {\n  const [parameters, setParameters] = React.useState(() =>\n    getDefaultizedUrlParams(defaultParams)\n  );\n  const { search } = useLocation();\n\n  React.useEffect(() => {\n    setParameters((prevParams) => {\n      const newParams = getDefaultizedUrlParams(defaultParams, synonyms);\n\n      const shouldUpdate = Object.keys(defaultParams).some(\n        (key) => newParams[key] !== prevParams[key]\n      );\n      return shouldUpdate ? newParams : prevParams;\n    });\n  }, [search, defaultParams, synonyms]);\n\n  const updateParameters = React.useCallback(\n    (modifier) => {\n      let newParams;\n      if (typeof modifier === \"function\") {\n        newParams = modifier(parameters);\n      } else {\n        newParams = modifier;\n      }\n      setParameters(newParams);\n      setUrlParams(newParams, defaultParams);\n    },\n    [parameters, defaultParams]\n  );\n  return [parameters, updateParameters];\n};\n\nexport default useUrlParams;\n","import * as React from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Option } from \"../../hooks/useOptions\";\n\ntype CustomProps = {\n  options: Option[];\n  value: Option | null;\n  onChange: any;\n};\n\n/**\n * Returns true if motif is included in one syn\n * @param synonyms\n * @param motif\n */\nconst firstSynonymMatching = (synonyms, motif) => {\n  const normalizedMotif = motif\n    .toLowerCase()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\");\n\n  return synonyms.find((synonym) => {\n    const normalizedSynonym = synonym\n      .toLowerCase()\n      .normalize(\"NFD\")\n      .replace(/[\\u0300-\\u036f]/g, \"\");\n    return normalizedSynonym.includes(normalizedMotif);\n  });\n};\n\nconst CustomAutoComplet = (props: CustomProps) => {\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const { options, value, onChange } = props;\n\n  return (\n    <Autocomplete\n      options={options}\n      // @ts-ignore\n      value={value}\n      onChange={onChange}\n      onInputChange={(event, newInputValue) => setInputValue(newInputValue)}\n      disablePortal\n      // @ts-ignore\n      renderInput={(params) => <TextField {...params} />}\n      getOptionLabel={(option) =>\n        typeof option === \"string\"\n          ? option\n          : firstSynonymMatching(option?.synonyms, inputValue)\n      }\n      filterOptions={(options) => {\n        return options.filter(\n          (option) => firstSynonymMatching(option.synonyms, inputValue) != null\n        );\n      }}\n      isOptionEqualToValue={(option, value) => option.value === value.value}\n    />\n  );\n};\n\nconst getOption = (options: Option[], key: string | null) => {\n  if (!key) {\n    return null;\n  }\n  const index = options.findIndex((option) => option.value === key);\n\n  if (index >= 0) {\n    return options[index];\n  }\n  return null;\n};\n\nconst Row = (props) => {\n  const {\n    packagingMaterials,\n    packagingShapes,\n    packagingRecycling,\n    updateRow,\n    material = null,\n    number_of_units: number = null,\n    recycling = null,\n    shape = null,\n  } = props;\n\n  const [innerMaterial, setInnerMaterial] = React.useState(() =>\n    getOption(packagingMaterials, material)\n  );\n  React.useEffect(() => {\n    setInnerMaterial(getOption(packagingMaterials, material));\n  }, [material, packagingMaterials]);\n\n  const [innerNumber, setInnerNumber] = React.useState(number);\n  React.useEffect(() => {\n    setInnerNumber(number);\n  }, [number]);\n\n  const [innerRecycling, setInnerRecycling] = React.useState(() =>\n    getOption(packagingRecycling, recycling)\n  );\n  React.useEffect(() => {\n    setInnerRecycling(getOption(packagingRecycling, recycling));\n  }, [packagingRecycling, recycling]);\n\n  const [innerShape, setInnerShape] = React.useState(() =>\n    getOption(packagingShapes, shape)\n  );\n  React.useEffect(() => {\n    setInnerShape(getOption(packagingShapes, shape));\n  }, [packagingShapes, shape]);\n\n  const reset = () => {\n    setInnerMaterial(getOption(packagingMaterials, material));\n    setInnerRecycling(getOption(packagingRecycling, recycling));\n    setInnerShape(getOption(packagingShapes, shape));\n    setInnerNumber(number);\n    updateRow({\n      material,\n      number,\n      recycling,\n      shape,\n    });\n  };\n  return (\n    <TableRow>\n      <TableCell>\n        <TextField\n          value={innerNumber || \"\"}\n          onChange={(event) => {\n            setInnerNumber(event.target.value);\n            updateRow({ number: event.target.value });\n          }}\n          sx={{ width: 100 }}\n        />\n      </TableCell>\n\n      <TableCell>\n        <CustomAutoComplet\n          options={packagingShapes}\n          value={innerShape}\n          onChange={(event, newValue) => {\n            updateRow({ shape: newValue && newValue.value });\n            setInnerShape(newValue);\n          }}\n        />\n      </TableCell>\n\n      <TableCell>\n        <CustomAutoComplet\n          options={packagingMaterials}\n          value={innerMaterial}\n          onChange={(event, newValue) => {\n            updateRow({ material: newValue && newValue.value });\n            setInnerMaterial(newValue);\n          }}\n        />\n      </TableCell>\n\n      <TableCell>\n        <CustomAutoComplet\n          options={packagingRecycling}\n          value={innerRecycling}\n          onChange={(event, newValue) => {\n            updateRow({ recycling: newValue && newValue.value });\n            setInnerRecycling(newValue);\n          }}\n        />\n      </TableCell>\n\n      <TableCell>\n        <Button\n          onClick={reset}\n          disabled={\n            material === innerMaterial &&\n            number === innerNumber &&\n            recycling === innerRecycling &&\n            shape === innerShape\n          }\n        >\n          Reset\n        </Button>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Row;\n","import axios from \"axios\";\nimport * as React from \"react\";\nimport { OFF_SEARCH } from \"../../const\";\n\ntype Parameters = {\n  page: number;\n  country?: string;\n  creator?: string;\n  code?: string;\n};\n\ntype Packaging = {\n  material: string;\n  number: string;\n  recycling: string;\n  shape: string;\n};\n\ntype ProductDescription = {\n  code: number;\n  states: any;\n  lang: string;\n  image_packaging_url: string;\n  packagings: Packaging[];\n  product_name: string;\n  images: any;\n  creator: string;\n};\nfunction getProductsToAnnotateUrl({\n  page = 1,\n  country = \"en:france\",\n  creator,\n  code = \"\",\n}: Parameters) {\n  if (code) {\n    return `https://fr.openfoodfacts.org/api/v3/product/${code}.json?fields=code,lang,image_packaging_url,product_name,packagings,images,creator,countries`;\n  }\n  let creatorTagNumber = 2;\n  if (country) {\n    creatorTagNumber += 1;\n  }\n\n  return `${OFF_SEARCH}?json=true&${\n    page ? `page=${page}&` : \"\"\n  }fields=code,states,lang,image_packaging_url,packagings,product_name,images,creator,countries&action=process&sort_by=unique_scans_n&tagtype_0=states&tag_contains_0=contains&tag_0=packaging-to-be-completed&tagtype_1=states&tag_contains_1=contains&tag_1=packaging-photo-selected${\n    country\n      ? `&tagtype_2=countries&tag_contains_2=contains&tag_2=${country}`\n      : \"\"\n  }${\n    creator\n      ? `&tagtype_${creatorTagNumber}=creator&tag_contains_${creatorTagNumber}=contains&tag_${creatorTagNumber}=${creator}`\n      : \"\"\n  }`;\n}\n\nexport const useBuffer = ({\n  country,\n  creator,\n  code,\n}: Omit<Parameters, \"page\">): [ProductDescription[], () => void] => {\n  const [page, setPage] = React.useState(() => Math.ceil(Math.random() * 100));\n  const [data, setData] = React.useState<ProductDescription[]>(null);\n  const [maxPage, setMaxPage] = React.useState<number>(100);\n\n  const url = getProductsToAnnotateUrl({ page, country, creator, code });\n\n  const canReset = React.useRef(false);\n  React.useEffect(() => {\n    if (canReset.current) {\n      setData([]);\n      setPage(1);\n    }\n  }, [country, creator]);\n\n  React.useEffect(() => {\n    if (data != null && data.length === 0) {\n      setPage((p) => Math.min(maxPage, p + 1));\n    }\n  }, [data, maxPage]);\n\n  React.useEffect(() => {\n    let isValid = true;\n    axios.get(url).then(({ data }) => {\n      if (isValid) {\n        setData(data.products ?? [data.product]);\n        setMaxPage(Math.floor(data.count / data.page_size) + 1);\n        canReset.current = true;\n      }\n    });\n    return () => {\n      isValid = false;\n    };\n  }, [url]);\n\n  const next = () =>\n    setData((prev) => (prev && prev.length > 0 ? prev.slice(1) : prev));\n  console.log(data);\n  return [data, next];\n};\n","import * as React from \"react\";\nimport axios from \"axios\";\n\nexport type Option = {\n  value: string;\n  synonyms: string[];\n  label: string;\n};\n\ntype Files = \"packaging_materials\" | \"packaging_recycling\" | \"packaging_shapes\";\n\nexport const useOptions = (fileName: Files, lang: string) => {\n  const [options, setOptions] = React.useState<Option[]>([]);\n\n  React.useEffect(() => {\n    axios\n      .get(\n        `https://static.openfoodfacts.org/data/taxonomies/${fileName}.full.json`\n      )\n      .then(({ data }) => {\n        const newOptions: Option[] = Object.keys(data)\n          .map((key) => {\n            const synonyms: undefined | string[] =\n              data[key].synonyms[lang] ??\n              data[key].synonyms[\"xx\"] ??\n              data[key].synonyms[\"en\"];\n\n            if (synonyms === undefined) {\n              return null;\n            }\n            return { value: key, synonyms, label: synonyms[0] };\n          })\n          .filter((o) => o !== null)\n          .sort((a, b) => a.label.localeCompare(b.label));\n\n        setOptions(newOptions);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [fileName, lang]);\n\n  return options;\n};\n","import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\n\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\n\nimport axios from \"axios\";\n\nimport Row from \"./Row\";\nimport { useBuffer } from \"./useBuffer\";\nimport { useOptions } from \"../../hooks/useOptions\";\nimport { getLang } from \"../../localeStorageManager\";\nimport ZoomableImage from \"../../components/ZoomableImage\";\nimport { getImagesUrls } from \"../questions/utils\";\nimport offService from \"../../off\";\nimport { useTranslation } from \"react-i18next\";\nimport useUrlParams from \"../../hooks/useUrlParams\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst formatData = (innerRows) => {\n  const packagings = innerRows\n    .map(({ material, number, recycling, shape }, index) => {\n      const rep = {};\n\n      if (number && !isNaN(Number.parseInt(number))) {\n        rep[\"number_of_units\"] = Number.parseInt(number);\n      }\n      if (shape) {\n        rep[`shape`] = { id: shape };\n      }\n      if (material) {\n        rep[`material`] = { id: material };\n      }\n      if (recycling) {\n        rep[`recycling`] = { id: recycling };\n      }\n\n      if (Object.keys(rep).length > 0) {\n        return rep;\n      }\n      return null;\n    })\n    .filter((x) => x !== null);\n\n  if (packagings.length === 0) {\n    return {};\n  }\n  return { product: { fields: \"updated\", packagings } };\n};\n\nconst Page = () => {\n  const { t } = useTranslation();\n  const lang = getLang();\n  const packagingMaterials = useOptions(\"packaging_materials\", lang);\n  const packagingShapes = useOptions(\"packaging_shapes\", lang);\n  const packagingRecycling = useOptions(\"packaging_recycling\", lang);\n  const [searchState] = useUrlParams(\n    {\n      country: \"en:france\",\n      creator: undefined,\n      code: \"\",\n    },\n    {}\n  );\n\n  const [rows, setRows] = React.useState([]);\n  const [innerRows, setInnerRows] = React.useState([]);\n\n  const [data, next] = useBuffer(searchState);\n\n  const product = data?.[0] ?? null;\n  React.useEffect(() => {\n    if (product) {\n      const newRows = product.packagings.map((item, index) => ({\n        id: index,\n        ...item,\n      }));\n      setRows(newRows);\n      setInnerRows(newRows);\n    }\n  }, [product]);\n\n  if (product === null) {\n    return <p>Loading...</p>;\n  }\n  return (\n    <React.Suspense fallback={<CircularProgress />}>\n      <Stack direction=\"row\" spacing={1} sx={{ overflow: \"auto\" }}>\n        {getImagesUrls(product.images, product.code).map((src) => (\n          <ZoomableImage\n            src={src}\n            imageProps={{\n              loading: \"lazy\",\n              style: { maxWidth: 300, maxHeight: 300 },\n            }}\n          />\n        ))}\n      </Stack>\n\n      <Box>\n        <Stack\n          spacing={1}\n          alignItems={{\n            xs: \"flex-start\",\n            md: \"flex-end\",\n          }}\n          direction={{ xs: \"column\", md: \"row\" }}\n        >\n          <img src={product.image_packaging_url} alt=\"\" />\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell sx={{ width: 100 }}>Nb per unit</TableCell>\n\n                  <TableCell>Shape</TableCell>\n\n                  <TableCell>Material</TableCell>\n\n                  <TableCell>Recycling</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => (\n                  <Row\n                    key={row.id}\n                    packagingMaterials={packagingMaterials}\n                    packagingShapes={packagingShapes}\n                    packagingRecycling={packagingRecycling}\n                    updateRow={(toUpsert) => {\n                      setInnerRows((prev) => {\n                        return prev.map((r) => {\n                          if (r.id !== row.id) {\n                            return r;\n                          }\n                          return { ...r, ...toUpsert };\n                        });\n                      });\n                    }}\n                    {...row}\n                  />\n                ))}\n              </TableBody>\n            </Table>\n            <Button\n              onClick={() => {\n                setRows((prev) => [\n                  ...prev,\n                  {\n                    id: prev.length + 1,\n                    material: null,\n                    number: null,\n                    recycling: null,\n                    shape: null,\n                  },\n                ]);\n                setInnerRows((prev) => [\n                  ...prev,\n                  {\n                    id: prev.length + 1,\n                    material: null,\n                    number: null,\n                    recycling: null,\n                    shape: null,\n                  },\n                ]);\n              }}\n            >\n              Add row\n            </Button>\n          </TableContainer>\n        </Stack>\n        <Stack\n          direction=\"row\"\n          spacing={2}\n          sx={{ my: 2, justifyContent: \"flex-end\" }}\n        >\n          <Button\n            sx={{ width: 150 }}\n            onClick={() => next()}\n            variant=\"contained\"\n          >\n            Skip\n          </Button>\n          <Button\n            sx={{ width: 150 }}\n            onClick={() => {\n              axios.patch(\n                `https://world.openfoodfacts.org/api/v3/product/${product.code}`,\n                formatData(innerRows),\n                { withCredentials: true }\n              );\n              next();\n            }}\n            variant=\"contained\"\n            color=\"success\"\n          >\n            Validate\n          </Button>\n        </Stack>\n      </Box>\n      <Stack direction=\"row\" spacing={2}>\n        <Typography>{product?.product_name}</Typography>\n        <Button\n          size=\"small\"\n          component={Link}\n          target=\"_blank\"\n          href={`${offService.getProductUrl(product.code)}#environment`}\n          variant=\"outlined\"\n          startIcon={<VisibilityIcon />}\n          sx={{ minWidth: 150 }}\n        >\n          {t(\"questions.view\")}\n        </Button>\n        <Button\n          size=\"small\"\n          component={Link}\n          target=\"_blank\"\n          href={offService.getProductEditUrl(product.code)}\n          variant=\"contained\"\n          startIcon={<EditIcon />}\n          sx={{ ml: 2, minWidth: 150 }}\n        >\n          {t(\"questions.edit\")}\n        </Button>\n      </Stack>\n    </React.Suspense>\n  );\n};\n\nexport default Page;\n","import * as React from \"react\";\n\nimport { NO_QUESTION_LEFT, OFF_URL } from \"../../const\";\nimport { reformatValueTag } from \"../../utils\";\nimport externalApi from \"../../externalApi\";\nimport offService from \"../../off\";\nimport robotoff from \"../../robotoff\";\nimport { getQuestionSearchParams } from \"../../components/QuestionFilter/useFilterSearch\";\n\nexport const ADDITIONAL_INFO_TRANSLATION = {\n  brands: \"brands\",\n  ingredientsText: \"ingredients\",\n  countriesTags: \"countries\",\n  categories: \"categories\",\n  labels_tags: \"labels\",\n  quantity: \"quantity\",\n};\n\n// src looks like: \"https://static.openfoodfacts.org/images/products/004/900/053/2258/1.jpg\"\nexport const getImageId = (src) => {\n  const file = src.split(\"/\").at(-1);\n  const imageId = file.replace(/\\..+$/, \"\");\n  return Number(imageId);\n};\n\nexport const getImagesUrls = (images, barcode) => {\n  if (!images || !barcode) {\n    return [];\n  }\n  const formattedCode = offService.getFormatedBarcode(barcode);\n  const rootImageUrl = offService.getImageUrl(formattedCode);\n  return Object.keys(images)\n    .filter((key) => !isNaN(Number.parseInt(key)))\n    .map((key) => `${rootImageUrl}/${key}.jpg`);\n};\n\n// Other questions fetching\nexport const useOtherQuestions = (code, insight_id) => {\n  const [otherQuestionsState, setOtherQuestionsState] = React.useState({\n    questions: [],\n    isLoading: true,\n  });\n  React.useEffect(() => {\n    if (!code) {\n      return;\n    }\n    let isStillValid = true;\n    setOtherQuestionsState({\n      questions: [],\n      isLoading: true,\n    });\n    robotoff.questionsByProductCode(code).then((result) => {\n      if (!isStillValid) {\n        return;\n      }\n      const newQuestions = result?.data?.questions ?? [];\n      setOtherQuestionsState({\n        questions: newQuestions.filter((q) => q?.insight_id !== insight_id),\n        isLoading: false,\n      });\n    });\n    return () => {\n      isStillValid = false;\n    };\n  }, [code, insight_id]);\n\n  const [pendingAnswers, setPendingAnswers] = React.useState({});\n  return [\n    otherQuestionsState,\n    setOtherQuestionsState,\n    pendingAnswers,\n    setPendingAnswers,\n  ];\n};\n\nexport const useFlagImage = (barcode) => {\n  const [flagged, setFlagged] = React.useState([]);\n\n  const flagImage = React.useCallback(\n    (src) => {\n      const imgid = getImageId(src);\n      externalApi.addImageFlag({ barcode, imgid, url: src });\n      setFlagged((prev) => [...prev, imgid]);\n    },\n    [barcode]\n  );\n\n  const deleteFlagImage = React.useCallback(\n    (src) => {\n      const imgid = getImageId(src);\n      externalApi.removeImageFlag({ barcode, imgid });\n\n      setFlagged((prev) =>\n        prev.filter((flaggedImageId) => flaggedImageId !== imgid)\n      );\n    },\n    [barcode]\n  );\n\n  // Reset flags\n  React.useEffect(() => {\n    setFlagged([]);\n  }, [barcode]);\n\n  return [flagged, flagImage, deleteFlagImage];\n};\n\nexport const useProductData = (barcode) => {\n  const [productData, setProductData] = React.useState({});\n\n  // product data fetching\n  React.useEffect(() => {\n    if (!barcode) {\n      return;\n    }\n    let isValid = true;\n    setProductData({\n      code: barcode,\n      isLoading: true,\n    });\n\n    offService\n      .getProduct(barcode)\n      .then((result) => {\n        if (!isValid) {\n          return;\n        }\n        const product = result.data.product;\n        setProductData({\n          code: barcode,\n          productName: product?.product_name || \"\",\n          brands: product?.brands || \"?\",\n          ingredientsText: product?.ingredients_text || \"?\",\n          countriesTags: product?.countries_tags\n            ? `${product?.countries_tags?.join?.(\", \")}.`\n            : \"?\",\n          images: product?.images || {},\n          categories: product?.categories || \"?\",\n          labels_tags: product?.labels_tags?.join?.(\", \") || \"?\",\n          quantity: product?.quantity || \"?\",\n          isLoading: false,\n        });\n      })\n      .catch(() => {});\n    return () => {\n      isValid = false;\n    };\n  }, [barcode]);\n\n  return productData;\n};\n\nexport const getFullSizeImage = (src) => {\n  if (!src) {\n    return \"https://static.openfoodfacts.org/images/image-placeholder.png\";\n  }\n  const needsFull = /\\/[a-z_]+.[0-9]*.400.jpg$/gm.test(src);\n\n  if (needsFull) {\n    return src.replace(\"400.jpg\", \"full.jpg\");\n  }\n  return src.replace(\"400.jpg\", \"jpg\");\n};\n\nexport const getValueTagQuestionsURL = (filterState, question) => {\n  if (\n    question !== null &&\n    question &&\n    question?.insight_id !== NO_QUESTION_LEFT &&\n    question?.value_tag\n  ) {\n    const urlParams = new URLSearchParams();\n    urlParams.append(\"type\", question.insight_type);\n    urlParams.append(\"value_tag\", reformatValueTag(question?.value_tag));\n    return `/questions?${getQuestionSearchParams({\n      ...filterState,\n      insightType: question.insight_type,\n      valueTag: question?.value_tag,\n    })}`;\n  }\n  return null;\n};\n\nexport const getValueTagExamplesURL = (question) => {\n  if (\n    question !== null &&\n    question?.insight_id !== NO_QUESTION_LEFT &&\n    question?.value_tag &&\n    question.insight_type\n  ) {\n    return `${OFF_URL}/${question.insight_type}/${reformatValueTag(\n      question?.value_tag\n    )}`;\n  }\n  return \"\";\n};\n\nexport const getNbOfQuestionForValue = async (filterState) => {\n  const { data: dataFetched } = await robotoff.questions(filterState, 1);\n  return dataFetched.count;\n};\n","import axios from \"axios\";\nimport { ROBOTOFF_API_URL, IS_DEVELOPMENT_MODE } from \"./const\";\nimport { getLang } from \"./localeStorageManager\";\nimport { reformatValueTag, removeEmptyKeys } from \"./utils\";\n\nexport interface QuestionInterface {\n  barcode: string;\n  insight_id: string;\n  insight_type: string;\n  question: string;\n  source_image_url?: string;\n  type: string;\n  value: string;\n  value_tag: string;\n}\n\ntype GetQuestionsResponse = { count: number; questions: QuestionInterface[] };\n\nconst robotoff = {\n  annotate(insightId: string, annotation) {\n    if (IS_DEVELOPMENT_MODE) {\n      console.log(\n        `Annotated, ${ROBOTOFF_API_URL}/insights/annotate`,\n        new URLSearchParams(\n          `insight_id=${insightId}&annotation=${annotation}&update=1`\n        ),\n        { withCredentials: true }\n      );\n    } else {\n      return axios.post(\n        `${ROBOTOFF_API_URL}/insights/annotate`,\n        new URLSearchParams(\n          `insight_id=${insightId}&annotation=${annotation}&update=1`\n        ),\n        { withCredentials: true }\n      );\n    }\n  },\n\n  questionsByProductCode(code: string) {\n    return axios\n      .get<GetQuestionsResponse>(`${ROBOTOFF_API_URL}/questions/${code}`)\n      .then((result) => {\n        let questions = result.data.questions;\n        result.data.questions = questions.filter(\n          (question) => question.source_image_url\n        );\n        return result;\n      });\n  },\n\n  questions(filterState, count = 10, page = 1) {\n    const {\n      insightType,\n      brandFilter,\n      valueTag,\n      countryFilter,\n      sortByPopularity,\n      campaign,\n      predictor,\n    } = filterState;\n\n    const searchParams = {\n      insight_types: insightType,\n      value_tag: valueTag,\n      brands: reformatValueTag(brandFilter),\n      country: countryFilter !== \"en:world\" ? countryFilter : null,\n      campaign,\n      predictor,\n    };\n\n    const lang = getLang();\n\n    return axios.get<GetQuestionsResponse>(\n      `${ROBOTOFF_API_URL}/questions/${\n        sortByPopularity ? \"popular\" : \"random\"\n      }`,\n      {\n        params: removeEmptyKeys({\n          ...searchParams,\n          lang,\n          count,\n          page,\n        }),\n      }\n    );\n  },\n\n  insightDetail(insight_id) {\n    return axios.get(`${ROBOTOFF_API_URL}/insights/detail/${insight_id}`);\n  },\n\n  loadLogo(logoId) {\n    return axios.get(`${ROBOTOFF_API_URL}/images/logos/${logoId}`);\n  },\n\n  updateLogo(logoId, value, type) {\n    return axios.put(\n      `${ROBOTOFF_API_URL}/images/logos/${logoId}`,\n      removeEmptyKeys({\n        value,\n        type,\n      }),\n      { withCredentials: true }\n    );\n  },\n\n  searchLogos(barcode, value, type, count = 25, random = false) {\n    const formattedValue = [\"label\", \"category\"].includes(type)\n      ? { taxonomy_value: value }\n      : { value };\n\n    return axios.get(`${ROBOTOFF_API_URL}/images/logos/search/`, {\n      params: removeEmptyKeys({\n        barcode,\n        type,\n        count,\n        random,\n        ...formattedValue,\n      }),\n    });\n  },\n\n  getLogoAnnotations(logoId, index, count = 25) {\n    const url =\n      logoId.length > 0\n        ? `${ROBOTOFF_API_URL}/ann/search/${logoId}`\n        : `${ROBOTOFF_API_URL}/ann/search`;\n    return axios.get(url, {\n      params: removeEmptyKeys({\n        index,\n        count,\n      }),\n    });\n  },\n\n  annotateLogos(annotations) {\n    return axios.post(\n      `${ROBOTOFF_API_URL}/images/logos/annotate`,\n      removeEmptyKeys({\n        annotations,\n      }),\n      { withCredentials: true }\n    );\n  },\n\n  getInsights(\n    barcode = \"\",\n    insightType = \"\",\n    valueTag = \"\",\n    annotation = \"\",\n    page = 1,\n    count = 25\n  ) {\n    let annotated;\n    if (annotation.length && annotation === \"not_annotated\") {\n      annotated = \"0\";\n      annotation = \"\";\n    }\n    return axios.get(`${ROBOTOFF_API_URL}/insights`, {\n      params: removeEmptyKeys({\n        barcode,\n        insight_types: insightType,\n        value_tag: valueTag,\n        annotation,\n        page,\n        annotated,\n        count,\n      }),\n    });\n  },\n\n  getUserStatistics(username) {\n    return axios.get(`${ROBOTOFF_API_URL}/users/statistics/${username}`);\n  },\n\n  getCroppedImageUrl(imageUrl, boundingBox) {\n    const [y_min, x_min, y_max, x_max] = boundingBox;\n    return `${ROBOTOFF_API_URL}/images/crop?image_url=${imageUrl}&y_min=${y_min}&x_min=${x_min}&y_max=${y_max}&x_max=${x_max}`;\n  },\n\n  getLogosImages(logoIds) {\n    return axios.get(\n      `${ROBOTOFF_API_URL}/images/logos?logo_ids=${logoIds.join(\",\")}`\n    );\n  },\n\n  getNutritionValueFromImage(language, imageOcrUrl, images) {\n    var ocrUrlSubString = imageOcrUrl.split(\"/\");\n\n    // setting a default value, assuming length of ocrUrlSubString is 7,\n    // and product code is 8 characters long\n    var productCodeForOcrUrl = ocrUrlSubString[5];\n\n    let nutritionKeyWithLangSuffix = `nutrition_${language}`;\n\n    for (var key in images) {\n      if (nutritionKeyWithLangSuffix === key) {\n        var imgid = images[nutritionKeyWithLangSuffix].imgid;\n      }\n    }\n\n    if (ocrUrlSubString.length > 7) {\n      // the productCode is 13 characters long\n      productCodeForOcrUrl =\n        ocrUrlSubString[5] +\n        \"/\" +\n        ocrUrlSubString[6] +\n        \"/\" +\n        ocrUrlSubString[7] +\n        \"/\" +\n        ocrUrlSubString[8];\n    }\n\n    return axios.get(\n      `${ROBOTOFF_API_URL}/predict/nutrient?ocr_url=https://images.openfoodfacts.org/images/products/${productCodeForOcrUrl}/${imgid}.json`\n    );\n  },\n\n  getUnansweredValues(params: {\n    type: \"label\" | \"brand\" | \"category\";\n    country;\n    campaign;\n    page?: number;\n    count?: number;\n  }) {\n    let page = params.page ?? 1;\n    page = page >= 1 ? page : 1;\n\n    return axios.get(\n      `${ROBOTOFF_API_URL}/questions/unanswered/?${Object.keys({\n        ...params,\n        page,\n      })\n        .filter((key) => params[key] !== undefined)\n        .map((key) => `${key}=${params[key]}`)\n        .join(\"&\")}`\n    );\n  },\n};\n\nexport default robotoff;\n","const reformatTagMapping = {\n  \" \": \"-\",\n  \"'\": \"-\",\n  \"&\": \"\",\n  à: \"a\",\n  â: \"a\",\n  ä: \"a\",\n  é: \"e\",\n  è: \"e\",\n  ê: \"e\",\n  ë: \"e\",\n  î: \"i\",\n  ï: \"i\",\n  ô: \"o\",\n  ö: \"o\",\n  û: \"u\",\n  ù: \"u\",\n  ü: \"u\",\n};\n\nexport const reformatValueTag = (value) => {\n  if (!value) {\n    return value;\n  }\n  let output = value.trim().toLowerCase();\n  for (const [search, replace] of Object.entries(reformatTagMapping)) {\n    output = output.replace(new RegExp(search, \"g\"), replace);\n  }\n  output = output.replace(/-{2,}/g, \"-\");\n  return output;\n};\n\nexport const removeEmptyKeys = (obj) => {\n  Object.keys(obj).forEach(\n    (key) => (obj[key] == null || obj[key] === \"\") && delete obj[key]\n  );\n  return obj;\n};\n\n//  Only for testing purpose\nexport function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n//to provide capitalised country name; en:france => France\nexport const capitaliseName = (string) => {\n  if (!string) {\n    return string;\n  }\n  let name = string.slice(3);\n  return name.charAt(0).toUpperCase() + name.slice(1);\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["DEFAULT_FILTER_STATE","insightType","brandFilter","countryFilter","sortByPopularity","valueTag","campaign","campagnes","countryNames","insightTypesNames","label","category","brand","product_weight","packaging","key2urlParam","urlParams2Key","Object","entries","forEach","key","value","convertParamsToUrl","params","rep","keys","DEFAULT_FILTER_URL_PARAMS","getQuestionSearchParams","convertObjectParamsToUrlParams","useFilterSearch","useUrlParams","urlSearchParams","setUrlSearchParams","exposedParameters","React","convertUrlToParams","localFavorites","isFavorite","setIsFavorite","setSearchParams","modifier","newExposedParameters","some","toggleFavorite","title","isSaved","logo","props","src","srcFull","zoomIn","imageProps","other","apiRef","rotation","setRotation","isOpen","setIsOpen","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","style","position","alt","onClick","sx","color","backgroundColor","alpha","palette","secondary","main","bottom","right","open","onClose","maxWidth","p","display","flexDirection","xs","md","limitToBounds","ref","maxHeight","transform","transformOrigin","fullWidth","variant","prev","startIcon","current","resetTransform","endIcon","externalApi","addImageFlag","barcode","imgid","url","axios","mode","catch","console","log","removeImageFlag","data","getDefaultizedUrlParams","defaultParameters","synonyms","parameters","urlParams","URLSearchParams","window","location","search","get","JSON","stringify","parse","valueKey","synonymKeys","synonymKey","set","undefined","delete","toString","defaultParams","setParameters","useLocation","prevParams","newParams","updateParameters","newRelativePathQuery","pathname","history","pushState","setUrlParams","firstSynonymMatching","motif","normalizedMotif","toLowerCase","normalize","replace","find","synonym","includes","CustomAutoComplet","inputValue","setInputValue","options","onChange","Autocomplete","onInputChange","event","newInputValue","disablePortal","renderInput","TextField","getOptionLabel","option","filterOptions","filter","isOptionEqualToValue","getOption","index","findIndex","packagingMaterials","packagingShapes","packagingRecycling","updateRow","material","number_of_units","number","recycling","shape","innerMaterial","setInnerMaterial","innerNumber","setInnerNumber","innerRecycling","setInnerRecycling","innerShape","setInnerShape","TableRow","TableCell","target","width","newValue","Button","disabled","useBuffer","country","creator","code","Math","ceil","random","page","setPage","setData","maxPage","setMaxPage","creatorTagNumber","OFF_SEARCH","getProductsToAnnotateUrl","canReset","length","min","isValid","then","products","product","floor","count","page_size","slice","useOptions","fileName","lang","setOptions","newOptions","map","o","sort","a","b","localeCompare","error","t","useTranslation","getLang","searchState","rows","setRows","innerRows","setInnerRows","next","newRows","packagings","item","id","fallback","CircularProgress","Stack","direction","spacing","overflow","getImagesUrls","images","ZoomableImage","Z","loading","Box","alignItems","image_packaging_url","TableContainer","component","Paper","Table","TableHead","TableBody","row","toUpsert","r","my","justifyContent","isNaN","Number","parseInt","x","fields","formatData","withCredentials","Typography","product_name","size","Link","href","offService","Visibility","minWidth","Edit","ml","ADDITIONAL_INFO_TRANSLATION","brands","ingredientsText","countriesTags","categories","labels_tags","quantity","getImageId","imageId","split","at","formattedCode","rootImageUrl","useOtherQuestions","insight_id","questions","isLoading","otherQuestionsState","setOtherQuestionsState","isStillValid","robotoff","result","newQuestions","q","pendingAnswers","setPendingAnswers","useFlagImage","flagged","setFlagged","flagImage","deleteFlagImage","flaggedImageId","useProductData","productData","setProductData","productName","ingredients_text","countries_tags","join","getFullSizeImage","test","getValueTagQuestionsURL","filterState","question","NO_QUESTION_LEFT","value_tag","append","insight_type","reformatValueTag","getValueTagExamplesURL","OFF_URL","getNbOfQuestionForValue","dataFetched","annotate","insightId","annotation","IS_DEVELOPMENT_MODE","ROBOTOFF_API_URL","questionsByProductCode","source_image_url","predictor","searchParams","insight_types","removeEmptyKeys","insightDetail","loadLogo","logoId","updateLogo","type","searchLogos","formattedValue","taxonomy_value","getLogoAnnotations","annotateLogos","annotations","getInsights","annotated","getUserStatistics","username","getCroppedImageUrl","imageUrl","boundingBox","y_min","x_min","y_max","x_max","getLogosImages","logoIds","getNutritionValueFromImage","language","imageOcrUrl","ocrUrlSubString","productCodeForOcrUrl","nutritionKeyWithLangSuffix","getUnansweredValues","reformatTagMapping","à","â","ä","é","è","ê","ë","î","ï","ô","ö","û","ù","ü","output","trim","RegExp","obj","sleep","ms","Promise","resolve","setTimeout","capitaliseName","string","name","charAt","toUpperCase","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","styled","overridesResolver","styles","root","overflowX","inProps","useThemeProps","className","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","getTableHeadUtilityClass","TableHeadRoot","tablelvl2","defaultComponent","Tablelvl2Context","children","role"],"sourceRoot":""}