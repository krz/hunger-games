{"version":3,"file":"static/js/861.0f881878.chunk.js","mappings":"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","sources":["components/LogoForm.jsx","components/LogoGrid.jsx","components/QuestionFilter/LabelFilter.tsx","hooks/useUrlParams.js","robotoff.ts","utils.js"],"sourcesContent":["import * as React from \"react\";\n\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nimport { useTranslation } from \"react-i18next\";\n\nimport LabelFilter from \"../components/QuestionFilter/LabelFilter\";\n\nconst TYPE_WITHOUT_VALUE = [\"packager_code\", \"qr_code\", \"no_logo\"];\n\nconst logoTypeOptions = [\n  { value: \"\", labelKey: \"logos.type\" },\n  { value: \"label\", labelKey: \"logos.label\" },\n  { value: \"brand\", labelKey: \"logos.brand\" },\n  { value: \"packager_code\", labelKey: \"logos.packager_code\" },\n  { value: \"packaging\", labelKey: \"logos.packaging\" },\n  { value: \"qr_code\", labelKey: \"logos.qr_code\" },\n  { value: \"category\", labelKey: \"logos.category\" },\n  { value: \"nutrition_label\", labelKey: \"logos.nutrition_label\" },\n  { value: \"store\", labelKey: \"logos.store\" },\n  { value: \"no_logo\", labelKey: \"logos.no_logo\" },\n];\n\nconst isValidAnnotation = ({ type, value }) => {\n  if (type.length === 0) return false;\n  if (!value && !TYPE_WITHOUT_VALUE.includes(type)) return false;\n  return true;\n};\n\nconst getFormattedValues = ({ type, value }) => {\n  if (!isValidAnnotation({ type, value })) return null;\n\n  let formattedValue = value.toLowerCase().trim();\n  if (TYPE_WITHOUT_VALUE.includes(type)) {\n    formattedValue = \"\";\n  }\n  return { type, value: formattedValue };\n};\n\nexport const useLogoForm = (value, type, request) => {\n  const [isSending, setIsSending] = React.useState(false);\n  const [innerValue, setInnerValue] = React.useState(value);\n  const [innerType, setInnerType] = React.useState(type);\n\n  React.useLayoutEffect(() => {\n    setInnerValue(value);\n  }, [value]);\n\n  React.useLayoutEffect(() => {\n    setInnerType(type);\n  }, [type]);\n\n  const send = React.useCallback(async () => {\n    setIsSending(true);\n    await request(getFormattedValues({ type: innerType, value: innerValue }));\n    setIsSending(false);\n  }, [request, innerType, innerValue]);\n\n  const isDifferent =\n    innerType !== type ||\n    (!TYPE_WITHOUT_VALUE.includes(innerType) &&\n      (innerValue !== null\n        ? innerValue.toLowerCase() !== value.toLowerCase()\n        : innerValue !== value));\n\n  const isValid = isValidAnnotation({\n    type: innerType || \"\",\n    value: innerValue,\n  });\n\n  const hasAutoComplet = [\"label\", \"category\", \"packaging\"].includes(innerType);\n\n  const typeControl = {\n    value: innerType,\n    onChange: (event) => setInnerType(event.target.value),\n  };\n  const valueControl = {\n    insightType: hasAutoComplet ? innerType : undefined,\n    value: innerValue,\n    onChange: hasAutoComplet\n      ? (newValue) => setInnerValue(newValue)\n      : (event) => setInnerValue(event.target.value),\n  };\n\n  return {\n    isSending,\n    send,\n    isDifferent,\n    hasAutoComplet,\n    isValid,\n    typeControl,\n    valueControl,\n  };\n};\n\nconst LogoForm = (props) => {\n  const { value, type, updateMode, request, isLoading, ...other } = props;\n  const { t } = useTranslation();\n\n  const {\n    isSending,\n    send,\n    isDifferent,\n    isValid,\n    hasAutoComplet,\n    typeControl,\n    valueControl,\n  } = useLogoForm(value, type, request);\n\n  return (\n    <Stack\n      direction={{ xs: \"column\", md: \"row\" }}\n      spacing={{ xs: 1, sm: 2, md: 4 }}\n      {...other}\n    >\n      <TextField\n        {...typeControl}\n        select\n        label={t(\"logos.type\")}\n        sx={{ minWidth: { xs: \"80%\", sm: 350 } }}\n        size=\"small\"\n      >\n        {logoTypeOptions.map(({ value, labelKey }) => (\n          <MenuItem key={labelKey} value={value}>\n            {t(labelKey)}\n          </MenuItem>\n        ))}\n      </TextField>\n      {hasAutoComplet ? (\n        <LabelFilter\n          showKey\n          {...valueControl}\n          label={t(\"logos.value\")}\n          size=\"small\"\n          sx={{ minWidth: { xs: \"80%\", sm: 350 } }}\n        />\n      ) : (\n        <TextField\n          {...valueControl}\n          label={t(\"logos.value\")}\n          sx={{ minWidth: { xs: \"80%\", sm: 350 } }}\n          size=\"small\"\n        />\n      )}\n      <LoadingButton\n        onClick={send}\n        loading={isSending}\n        disabled={isLoading || !isValid || (updateMode && !isDifferent)}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        {t(\"logos.update\")}\n      </LoadingButton>\n    </Stack>\n  );\n};\nexport default LogoForm;\n","import * as React from \"react\";\n\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport CardActionArea from \"@mui/material/CardActionArea\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { useTranslation } from \"react-i18next\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport LinkIcon from \"@mui/icons-material/Link\";\nimport { useTheme } from \"@mui/system\";\nimport LogoForm from \"../components/LogoForm\";\nimport { IS_DEVELOPMENT_MODE } from \"../const\";\nimport robotoff from \"../robotoff\";\n\nconst externalLogoURL = (id) => `/logos?logo_id=${id}&count=50`;\n\nconst LogoCard = React.memo(\n  ({\n    selected,\n    id,\n    index,\n    selectionApiRef,\n    annotation_value,\n    image,\n    annotation_type,\n    distance,\n    readOnly,\n    editOpen,\n  }) => {\n    const { t } = useTranslation();\n    const theme = useTheme();\n    const [editing, setEditing] = React.useState(editOpen);\n\n    const updateLogo = React.useCallback(\n      async (data) => {\n        if (data == null) {\n          return;\n        }\n        const { type, value } = data;\n        if (!IS_DEVELOPMENT_MODE) {\n          await robotoff.updateLogo(id, value, type);\n        }\n      },\n      [id]\n    );\n\n    const handleClick = (event) => {\n      if (event.shiftKey) {\n        selectionApiRef.current.rangeSelection?.(index, id, selected);\n      } else {\n        selectionApiRef.current.singleSelection?.(index, id, selected);\n      }\n    };\n\n    const toggleOpenEditor = () => {\n      setEditing((prev) => !prev);\n    };\n\n    return (\n      <Card\n        sx={{\n          width: 180,\n          margin: \"20px auto 0 auto\",\n          boxSizing: \"border-box\",\n          backgroundColor: selected\n            ? theme.palette.action.selected\n            : annotation_type\n            ? theme.palette.action.disabledBackground\n            : undefined,\n          // border: selected ? `solid ${theme.palette.primary.main} ${theme.spacing(1)}` : undefined,\n          position: \"relative\",\n        }}\n      >\n        <Box\n          sx={{ display: \"flex\", justifyContent: \"space-between\", padding: 1 }}\n        >\n          <Tooltip title=\"Edit this logo\">\n            <IconButton size=\"small\" onClick={toggleOpenEditor}>\n              <EditIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"See similar logos\">\n            <IconButton size=\"small\" component={Link} to={externalLogoURL(id)}>\n              <LinkIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Divider />\n        <CardActionArea\n          disabled={readOnly || !!annotation_type}\n          onClick={handleClick}\n          sx={{ flexGrow: 1 }}\n        >\n          <CardMedia\n            component=\"img\"\n            height=\"150px\"\n            width=\"180px\"\n            loading=\"lazy\"\n            image={image}\n            sx={{ objectFit: \"contain\" }}\n          />\n        </CardActionArea>\n        <Typography sx={{ padding: 1 }} variant=\"caption\">\n          {distance !== undefined &&\n            `${t(\"logos.distance\")} ${distance.toFixed(1)}`}\n        </Typography>\n        <br />\n\n        {editOpen || editing ? (\n          <LogoForm\n            value={annotation_value}\n            type={annotation_type}\n            updateMode\n            request={updateLogo}\n            sx={{\n              \"&\": {\n                flexDirection: \"column\",\n              },\n              \"& .MuiTextField-root, & .MuiButtonBase-root, & .MuiAutocomplete-root\":\n                {\n                  minWidth: 0,\n                  width: \"100%\",\n                  margin: 0,\n                },\n            }}\n          />\n        ) : (\n          <Typography sx={{ padding: 1 }} variant=\"caption\">\n            {(annotation_type || annotation_value) &&\n              `${t(\"logos.annotation\")} ${annotation_value || \"\"} (${\n                annotation_type || \"\"\n              })`}\n          </Typography>\n        )}\n        {!readOnly && (\n          <Checkbox\n            checked={selected}\n            disabled={!!annotation_type}\n            size=\"small\"\n            onClick={handleClick}\n            sx={{ position: \"absolute\", bottom: 0, right: 0 }}\n          />\n        )}\n      </Card>\n    );\n  }\n);\n\nconst LogoGrid = (props) => {\n  const {\n    logos,\n    toggleLogoSelection,\n    setLogoSelectionRange,\n    readOnly,\n    sx,\n    editOpen,\n  } = props;\n\n  const [lastClicked, setLastClicked] = React.useState(null);\n  const selectionApiRef = React.useRef({});\n\n  const [logoIds, setLogoIds] = React.useState([]);\n\n  React.useEffect(() => {\n    if (\n      JSON.stringify(logoIds) !== JSON.stringify(logos.map((logo) => logo.id))\n    ) {\n      // Reset lastClick when logos ret reordered or modified\n      setLogoIds(logos.map((logo) => logo.id));\n      setLastClicked(null);\n    }\n  }, [logoIds, logos]);\n\n  React.useEffect(() => {\n    selectionApiRef.current = {\n      rangeSelection: (index, id, selected) => {\n        if (setLogoSelectionRange === undefined) {\n          toggleLogoSelection(id);\n          return;\n        }\n        if (lastClicked === null) {\n          toggleLogoSelection(id);\n          setLastClicked({ selected: !selected, index });\n        }\n\n        const newSelectionState =\n          selected === lastClicked.selected\n            ? !lastClicked.selected\n            : lastClicked.selected;\n        const minIndex = Math.min(index, lastClicked.index);\n        const maxIndex = Math.max(index, lastClicked.index);\n        setLogoSelectionRange(\n          logoIds.slice(minIndex, maxIndex + 1),\n          newSelectionState\n        );\n        setLastClicked({ selected: newSelectionState, index });\n      },\n      singleSelection: (index, id, selected) => {\n        toggleLogoSelection(id);\n        if (setLogoSelectionRange !== undefined) {\n          setLastClicked((prev) => ({ selected: !selected, index }));\n        }\n      },\n    };\n  }, [lastClicked, logoIds, setLogoSelectionRange, toggleLogoSelection]);\n\n  return (\n    <Box\n      sx={{\n        paddingTop: 5,\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fill, minmax(200px, 1fr))\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        ...sx,\n      }}\n    >\n      {logos.map((logo, logoIndex) => (\n        <LogoCard\n          key={logo.id}\n          index={logoIndex}\n          selected={logo.selected || false}\n          id={logo.id}\n          annotation_value={logo.annotation_value}\n          image={logo.image.src}\n          annotation_type={logo.annotation_type}\n          distance={logo.distance}\n          readOnly={readOnly}\n          selectionApiRef={selectionApiRef}\n          editOpen={editOpen}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default LogoGrid;\n","import * as React from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { getLang } from \"../../localeStorageManager\";\nimport axios from \"axios\";\nimport { URL_ORIGINE } from \"../../const\";\n\n// Otherwise fallback on english\nconst AVAILABLE_OPTIONS = [\"de\", \"es\", \"fr\", \"hr\", \"nl\", \"sv\"];\n\nconst cleanName = (name) =>\n  name\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n    .toLowerCase()\n    .replace(/[^0-9a-z]/gi, \" \");\n\nconst useOptionFetching = (insightType, inputValue, lang) => {\n  const [options, setOptions] = React.useState([]);\n  const fetchedKeysRef = React.useRef({});\n\n  React.useEffect(() => {\n    setOptions([]);\n    fetchedKeysRef.current = {};\n  }, [insightType]);\n\n  React.useEffect(() => {\n    let keyToFetch = inputValue.toLowerCase();\n    if (/^[a-z][a-z]:/.test(keyToFetch)) {\n      keyToFetch = keyToFetch.slice(3);\n    }\n    keyToFetch = keyToFetch.replace(/[^0-9a-z]/gi, \"-\");\n\n    [\n      keyToFetch.slice(0, 1),\n      keyToFetch.slice(0, 2),\n      keyToFetch.slice(0, 3),\n    ].forEach((key) => {\n      if (key.length > 0 && !fetchedKeysRef.current[key]) {\n        fetchedKeysRef.current[key] = true;\n        axios\n          .get(\n            `${URL_ORIGINE}/data/${\n              AVAILABLE_OPTIONS.includes(lang) ? lang : \"en\"\n            }/${insightType}/${key}.json`\n          )\n          .then(({ data }) => {\n            setOptions((prevOptions) => {\n              const existingKeys = prevOptions.map((x) => x.key);\n              return [\n                ...prevOptions,\n                ...data\n                  .filter(({ key }) => !existingKeys.includes(key))\n                  .map((option) => ({\n                    ...option,\n                    cleanName: cleanName(option.name),\n                  })),\n              ];\n            });\n          })\n          .catch(() => {});\n      }\n    });\n  }, [inputValue, insightType, lang]);\n\n  return options;\n};\n\nconst LabelFilter = (props) => {\n  const { showKey, onChange, value, insightType, fullWidth, ...other } = props;\n\n  const [innerValue, setInnerValue] = React.useState(null);\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  const lang = getLang();\n\n  const options = useOptionFetching(insightType, inputValue, lang);\n\n  React.useEffect(() => {\n    setInnerValue((prev) => {\n      if (typeof prev === \"object\" && prev?.key === value) {\n        return prev;\n      }\n      const solution = options.find((option) => option.key === value);\n\n      if (solution) {\n        return solution;\n      }\n      return value;\n    });\n  }, [value, options]);\n\n  return (\n    <Autocomplete\n      fullWidth={fullWidth}\n      freeSolo\n      onChange={(_, newValue) => {\n        setInnerValue(newValue);\n        onChange(newValue?.key ?? newValue);\n      }}\n      onInputChange={(e, newInputValue, reason) => {\n        setInputValue(newInputValue);\n      }}\n      onBlur={() => {\n        const isSelectedValue =\n          typeof innerValue === \"string\"\n            ? innerValue === inputValue\n            : innerValue.name === inputValue;\n        if (!isSelectedValue) {\n          setInnerValue(inputValue);\n          onChange(inputValue);\n        }\n      }}\n      inputValue={inputValue}\n      value={innerValue}\n      options={options}\n      getOptionLabel={(option) => option?.name ?? option}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          {...other}\n          helperText={\n            showKey &&\n            (innerValue?.key ||\n              (innerValue !== \"\" &&\n                innerValue !== null &&\n                `⚠️ unknown: \"${innerValue}\"`))\n          }\n        />\n      )}\n      filterOptions={(options, state) => {\n        return options.filter((option) =>\n          option?.cleanName.includes(cleanName(state.inputValue))\n        );\n      }}\n    />\n  );\n};\n\nexport default LabelFilter;\n","import * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const setUrlParams = (parameters, defaultParameters) => {\n  const newRelativePathQuery = `${\n    window.location.pathname\n  }?${convertObjectParamsToUrlParams(parameters, defaultParameters)}`;\n  window.history.pushState(null, \"\", newRelativePathQuery);\n};\n\nexport const getDefaultizedUrlParams = (defaultParameters, synonyms = {}) => {\n  const parameters = { ...defaultParameters };\n  const urlParams = new URLSearchParams(window.location.search);\n  Object.keys(defaultParameters).forEach((key) => {\n    const value = urlParams.get(key);\n    if (value !== null && JSON.stringify(defaultParameters[key]) !== value) {\n      if (value === \"true\" || value === \"false\") {\n        parameters[key] = JSON.parse(value);\n      } else {\n        parameters[key] = value;\n      }\n    }\n  });\n\n  Object.entries(synonyms).forEach(([valueKey, synonymKeys]) => {\n    const toTest =\n      typeof synonymKeys === \"string\" ? [synonymKeys] : synonymKeys;\n    toTest.forEach((synonymKey) => {\n      const value = urlParams.get(synonymKey);\n      if (\n        value !== null &&\n        JSON.stringify(defaultParameters[valueKey]) !== value\n      ) {\n        if (value === \"true\" || value === \"false\") {\n          parameters[valueKey] = JSON.parse(value);\n        } else {\n          parameters[valueKey] = value;\n        }\n      }\n    });\n  });\n\n  return parameters;\n};\n\nexport const convertObjectParamsToUrlParams = (\n  parameters,\n  defaultParameters\n) => {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  Object.keys(parameters).forEach((key) => {\n    if (JSON.stringify(parameters[key]) !== urlParams.get(key)) {\n      urlParams.set(key, parameters[key]);\n    }\n  });\n\n  if (defaultParameters !== undefined) {\n    Object.keys(defaultParameters).forEach((key) => {\n      if (\n        urlParams.get(key) !== null &&\n        defaultParameters[key] === parameters[key]\n      ) {\n        // Already in default. We can remove it\n        urlParams.delete(key);\n      }\n    });\n  }\n\n  return urlParams.toString();\n};\n\n/**\n * Hook that works as useState to keep in sync with URL query params\n * @param {object} defaultParams The object to get from the URL\n * @param {object} synonyms The synonmys under the form { valueKeyA: ['synonymA1', 'synsonymA2'], valueKeyB: 'synsonlymB1' }.\n * If the urls containg a paramter named `synonymA1` it will be used to override valueKeyA value.\n * @returns [state, setState]\n */\nconst useUrlParams = (defaultParams, synonyms) => {\n  const [parameters, setParameters] = React.useState(() =>\n    getDefaultizedUrlParams(defaultParams)\n  );\n  const { search } = useLocation();\n\n  React.useEffect(() => {\n    setParameters((prevParams) => {\n      const newParams = getDefaultizedUrlParams(defaultParams, synonyms);\n\n      const shouldUpdate = Object.keys(defaultParams).some(\n        (key) => newParams[key] !== prevParams[key]\n      );\n      return shouldUpdate ? newParams : prevParams;\n    });\n  }, [search, defaultParams, synonyms]);\n\n  const updateParameters = React.useCallback(\n    (modifier) => {\n      let newParams;\n      if (typeof modifier === \"function\") {\n        newParams = modifier(parameters);\n      } else {\n        newParams = modifier;\n      }\n      setParameters(newParams);\n      setUrlParams(newParams, defaultParams);\n    },\n    [parameters, defaultParams]\n  );\n  return [parameters, updateParameters];\n};\n\nexport default useUrlParams;\n","import axios from \"axios\";\nimport { ROBOTOFF_API_URL, IS_DEVELOPMENT_MODE } from \"./const\";\nimport { getLang } from \"./localeStorageManager\";\nimport { reformatValueTag, removeEmptyKeys } from \"./utils\";\n\nexport interface QuestionInterface {\n  barcode: string;\n  insight_id: string;\n  insight_type: string;\n  question: string;\n  source_image_url?: string;\n  type: string;\n  value: string;\n  value_tag: string;\n}\n\ntype GetQuestionsResponse = { count: number; questions: QuestionInterface[] };\n\nconst robotoff = {\n  annotate(insightId: string, annotation) {\n    if (IS_DEVELOPMENT_MODE) {\n      console.log(\n        `Annotated, ${ROBOTOFF_API_URL}/insights/annotate`,\n        new URLSearchParams(\n          `insight_id=${insightId}&annotation=${annotation}&update=1`\n        ),\n        { withCredentials: true }\n      );\n    } else {\n      return axios.post(\n        `${ROBOTOFF_API_URL}/insights/annotate`,\n        new URLSearchParams(\n          `insight_id=${insightId}&annotation=${annotation}&update=1`\n        ),\n        { withCredentials: true }\n      );\n    }\n  },\n\n  questionsByProductCode(code: string) {\n    return axios\n      .get<GetQuestionsResponse>(`${ROBOTOFF_API_URL}/questions/${code}`)\n      .then((result) => {\n        let questions = result.data.questions;\n        result.data.questions = questions.filter(\n          (question) => question.source_image_url\n        );\n        return result;\n      });\n  },\n\n  questions(filterState, count = 10, page = 1) {\n    const {\n      insightType,\n      brandFilter,\n      valueTag,\n      countryFilter,\n      sortByPopularity,\n      campaign,\n      predictor,\n    } = filterState;\n\n    const searchParams = {\n      insight_types: insightType,\n      value_tag: valueTag,\n      brands: reformatValueTag(brandFilter),\n      country: countryFilter !== \"en:world\" ? countryFilter : null,\n      campaign,\n      predictor,\n    };\n\n    const lang = getLang();\n\n    return axios.get<GetQuestionsResponse>(\n      `${ROBOTOFF_API_URL}/questions/${\n        sortByPopularity ? \"popular\" : \"random\"\n      }`,\n      {\n        params: removeEmptyKeys({\n          ...searchParams,\n          lang,\n          count,\n          page,\n        }),\n      }\n    );\n  },\n\n  insightDetail(insight_id) {\n    return axios.get(`${ROBOTOFF_API_URL}/insights/detail/${insight_id}`);\n  },\n\n  loadLogo(logoId) {\n    return axios.get(`${ROBOTOFF_API_URL}/images/logos/${logoId}`);\n  },\n\n  updateLogo(logoId, value, type) {\n    return axios.put(\n      `${ROBOTOFF_API_URL}/images/logos/${logoId}`,\n      removeEmptyKeys({\n        value,\n        type,\n      }),\n      { withCredentials: true }\n    );\n  },\n\n  searchLogos(barcode, value, type, count = 25, random = false) {\n    const formattedValue = [\"label\", \"category\"].includes(type)\n      ? { taxonomy_value: value }\n      : { value };\n\n    return axios.get(`${ROBOTOFF_API_URL}/images/logos/search/`, {\n      params: removeEmptyKeys({\n        barcode,\n        type,\n        count,\n        random,\n        ...formattedValue,\n      }),\n    });\n  },\n\n  getLogoAnnotations(logoId, index, count = 25) {\n    const url =\n      logoId.length > 0\n        ? `${ROBOTOFF_API_URL}/ann/search/${logoId}`\n        : `${ROBOTOFF_API_URL}/ann/search`;\n    return axios.get(url, {\n      params: removeEmptyKeys({\n        index,\n        count,\n      }),\n    });\n  },\n\n  annotateLogos(annotations) {\n    return axios.post(\n      `${ROBOTOFF_API_URL}/images/logos/annotate`,\n      removeEmptyKeys({\n        annotations,\n      }),\n      { withCredentials: true }\n    );\n  },\n\n  getInsights(\n    barcode = \"\",\n    insightType = \"\",\n    valueTag = \"\",\n    annotation = \"\",\n    page = 1,\n    count = 25\n  ) {\n    let annotated;\n    if (annotation.length && annotation === \"not_annotated\") {\n      annotated = \"0\";\n      annotation = \"\";\n    }\n    return axios.get(`${ROBOTOFF_API_URL}/insights`, {\n      params: removeEmptyKeys({\n        barcode,\n        insight_types: insightType,\n        value_tag: valueTag,\n        annotation,\n        page,\n        annotated,\n        count,\n      }),\n    });\n  },\n\n  getUserStatistics(username) {\n    return axios.get(`${ROBOTOFF_API_URL}/users/statistics/${username}`);\n  },\n\n  getCroppedImageUrl(imageUrl, boundingBox) {\n    const [y_min, x_min, y_max, x_max] = boundingBox;\n    return `${ROBOTOFF_API_URL}/images/crop?image_url=${imageUrl}&y_min=${y_min}&x_min=${x_min}&y_max=${y_max}&x_max=${x_max}`;\n  },\n\n  getLogosImages(logoIds) {\n    return axios.get(\n      `${ROBOTOFF_API_URL}/images/logos?logo_ids=${logoIds.join(\",\")}`\n    );\n  },\n\n  getNutritionValueFromImage(language, imageOcrUrl, images) {\n    var ocrUrlSubString = imageOcrUrl.split(\"/\");\n\n    // setting a default value, assuming length of ocrUrlSubString is 7,\n    // and product code is 8 characters long\n    var productCodeForOcrUrl = ocrUrlSubString[5];\n\n    let nutritionKeyWithLangSuffix = `nutrition_${language}`;\n\n    for (var key in images) {\n      if (nutritionKeyWithLangSuffix === key) {\n        var imgid = images[nutritionKeyWithLangSuffix].imgid;\n      }\n    }\n\n    if (ocrUrlSubString.length > 7) {\n      // the productCode is 13 characters long\n      productCodeForOcrUrl =\n        ocrUrlSubString[5] +\n        \"/\" +\n        ocrUrlSubString[6] +\n        \"/\" +\n        ocrUrlSubString[7] +\n        \"/\" +\n        ocrUrlSubString[8];\n    }\n\n    return axios.get(\n      `${ROBOTOFF_API_URL}/predict/nutrient?ocr_url=https://images.openfoodfacts.org/images/products/${productCodeForOcrUrl}/${imgid}.json`\n    );\n  },\n\n  getUnansweredValues(params: {\n    type: \"label\" | \"brand\" | \"category\";\n    country;\n    campaign;\n    page?: number;\n    count?: number;\n  }) {\n    let page = params.page ?? 1;\n    page = page >= 1 ? page : 1;\n\n    return axios.get(\n      `${ROBOTOFF_API_URL}/questions/unanswered/?${Object.keys({\n        ...params,\n        page,\n      })\n        .filter((key) => params[key] !== undefined)\n        .map((key) => `${key}=${params[key]}`)\n        .join(\"&\")}`\n    );\n  },\n};\n\nexport default robotoff;\n","const reformatTagMapping = {\n  \" \": \"-\",\n  \"'\": \"-\",\n  \"&\": \"\",\n  à: \"a\",\n  â: \"a\",\n  ä: \"a\",\n  é: \"e\",\n  è: \"e\",\n  ê: \"e\",\n  ë: \"e\",\n  î: \"i\",\n  ï: \"i\",\n  ô: \"o\",\n  ö: \"o\",\n  û: \"u\",\n  ù: \"u\",\n  ü: \"u\",\n};\n\nexport const reformatValueTag = (value) => {\n  if (!value) {\n    return value;\n  }\n  let output = value.trim().toLowerCase();\n  for (const [search, replace] of Object.entries(reformatTagMapping)) {\n    output = output.replace(new RegExp(search, \"g\"), replace);\n  }\n  output = output.replace(/-{2,}/g, \"-\");\n  return output;\n};\n\nexport const removeEmptyKeys = (obj) => {\n  Object.keys(obj).forEach(\n    (key) => (obj[key] == null || obj[key] === \"\") && delete obj[key]\n  );\n  return obj;\n};\n\n//  Only for testing purpose\nexport function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n//to provide capitalised country name; en:france => France\nexport const capitaliseName = (string) => {\n  if (!string) {\n    return string;\n  }\n  let name = string.slice(3);\n  return name.charAt(0).toUpperCase() + name.slice(1);\n};\n"],"names":["TYPE_WITHOUT_VALUE","logoTypeOptions","value","labelKey","isValidAnnotation","type","length","includes","getFormattedValues","formattedValue","toLowerCase","trim","props","updateMode","request","isLoading","other","t","useTranslation","React","isSending","setIsSending","innerValue","setInnerValue","innerType","setInnerType","send","isDifferent","isValid","hasAutoComplet","typeControl","onChange","event","target","valueControl","insightType","undefined","newValue","useLogoForm","direction","xs","md","spacing","sm","select","label","sx","minWidth","size","map","showKey","onClick","loading","disabled","variant","color","externalLogoURL","id","LogoCard","selected","index","selectionApiRef","annotation_value","image","annotation_type","distance","readOnly","editOpen","theme","useTheme","editing","setEditing","updateLogo","data","IS_DEVELOPMENT_MODE","robotoff","handleClick","shiftKey","current","rangeSelection","singleSelection","width","margin","boxSizing","backgroundColor","palette","action","disabledBackground","position","display","justifyContent","padding","title","prev","fontSize","component","Link","to","flexGrow","height","objectFit","toFixed","flexDirection","checked","bottom","right","logos","toggleLogoSelection","setLogoSelectionRange","lastClicked","setLastClicked","logoIds","setLogoIds","JSON","stringify","logo","newSelectionState","minIndex","Math","min","maxIndex","max","slice","paddingTop","gridTemplateColumns","alignItems","logoIndex","src","AVAILABLE_OPTIONS","cleanName","name","normalize","replace","fullWidth","inputValue","setInputValue","lang","getLang","options","setOptions","fetchedKeysRef","keyToFetch","test","forEach","key","axios","URL_ORIGINE","then","prevOptions","existingKeys","x","filter","option","catch","useOptionFetching","solution","find","freeSolo","_","onInputChange","e","newInputValue","reason","onBlur","getOptionLabel","renderInput","params","helperText","filterOptions","state","getDefaultizedUrlParams","defaultParameters","synonyms","parameters","urlParams","URLSearchParams","window","location","search","Object","keys","get","parse","entries","valueKey","synonymKeys","synonymKey","convertObjectParamsToUrlParams","set","delete","toString","defaultParams","setParameters","useLocation","prevParams","newParams","some","updateParameters","modifier","newRelativePathQuery","pathname","history","pushState","setUrlParams","annotate","insightId","annotation","ROBOTOFF_API_URL","withCredentials","console","log","questionsByProductCode","code","result","questions","question","source_image_url","filterState","count","page","brandFilter","valueTag","countryFilter","sortByPopularity","campaign","predictor","searchParams","insight_types","value_tag","brands","reformatValueTag","country","removeEmptyKeys","insightDetail","insight_id","loadLogo","logoId","searchLogos","barcode","random","taxonomy_value","getLogoAnnotations","url","annotateLogos","annotations","getInsights","annotated","getUserStatistics","username","getCroppedImageUrl","imageUrl","boundingBox","y_min","x_min","y_max","x_max","getLogosImages","join","getNutritionValueFromImage","language","imageOcrUrl","images","ocrUrlSubString","split","productCodeForOcrUrl","nutritionKeyWithLangSuffix","imgid","getUnansweredValues","reformatTagMapping","à","â","ä","é","è","ê","ë","î","ï","ô","ö","û","ù","ü","output","RegExp","obj","sleep","ms","Promise","resolve","setTimeout","capitaliseName","string","charAt","toUpperCase"],"sourceRoot":""}