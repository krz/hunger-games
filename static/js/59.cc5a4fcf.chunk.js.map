{"version":3,"file":"static/js/59.cc5a4fcf.chunk.js","mappings":"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","sources":["components/LogoForm.jsx","components/QuestionFilter/LabelFilter.tsx","externalApi.js","pages/logos/LogoUpdate.jsx","robotoff.ts","utils.js"],"sourcesContent":["import * as React from \"react\";\n\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nimport { useTranslation } from \"react-i18next\";\n\nimport LabelFilter from \"../components/QuestionFilter/LabelFilter\";\n\nconst TYPE_WITHOUT_VALUE = [\"packager_code\", \"qr_code\", \"no_logo\"];\n\nconst logoTypeOptions = [\n  { value: \"\", labelKey: \"logos.type\" },\n  { value: \"label\", labelKey: \"logos.label\" },\n  { value: \"brand\", labelKey: \"logos.brand\" },\n  { value: \"packager_code\", labelKey: \"logos.packager_code\" },\n  { value: \"packaging\", labelKey: \"logos.packaging\" },\n  { value: \"qr_code\", labelKey: \"logos.qr_code\" },\n  { value: \"category\", labelKey: \"logos.category\" },\n  { value: \"nutrition_label\", labelKey: \"logos.nutrition_label\" },\n  { value: \"store\", labelKey: \"logos.store\" },\n  { value: \"no_logo\", labelKey: \"logos.no_logo\" },\n];\n\nconst isValidAnnotation = ({ type, value }) => {\n  if (type.length === 0) return false;\n  if (!value && !TYPE_WITHOUT_VALUE.includes(type)) return false;\n  return true;\n};\n\nconst getFormattedValues = ({ type, value }) => {\n  if (!isValidAnnotation({ type, value })) return null;\n\n  let formattedValue = value.toLowerCase().trim();\n  if (TYPE_WITHOUT_VALUE.includes(type)) {\n    formattedValue = \"\";\n  }\n  return { type, value: formattedValue };\n};\n\nexport const useLogoForm = (value, type, request) => {\n  const [isSending, setIsSending] = React.useState(false);\n  const [innerValue, setInnerValue] = React.useState(value);\n  const [innerType, setInnerType] = React.useState(type);\n\n  React.useLayoutEffect(() => {\n    setInnerValue(value);\n  }, [value]);\n\n  React.useLayoutEffect(() => {\n    setInnerType(type);\n  }, [type]);\n\n  const send = React.useCallback(async () => {\n    setIsSending(true);\n    await request(getFormattedValues({ type: innerType, value: innerValue }));\n    setIsSending(false);\n  }, [request, innerType, innerValue]);\n\n  const isDifferent =\n    innerType !== type ||\n    (!TYPE_WITHOUT_VALUE.includes(innerType) &&\n      (innerValue !== null\n        ? innerValue.toLowerCase() !== value.toLowerCase()\n        : innerValue !== value));\n\n  const isValid = isValidAnnotation({\n    type: innerType || \"\",\n    value: innerValue,\n  });\n\n  const hasAutoComplet = [\"label\", \"category\", \"packaging\"].includes(innerType);\n\n  const typeControl = {\n    value: innerType,\n    onChange: (event) => setInnerType(event.target.value),\n  };\n  const valueControl = {\n    insightType: hasAutoComplet ? innerType : undefined,\n    value: innerValue,\n    onChange: hasAutoComplet\n      ? (newValue) => setInnerValue(newValue)\n      : (event) => setInnerValue(event.target.value),\n  };\n\n  return {\n    isSending,\n    send,\n    isDifferent,\n    hasAutoComplet,\n    isValid,\n    typeControl,\n    valueControl,\n  };\n};\n\nconst LogoForm = (props) => {\n  const { value, type, updateMode, request, isLoading, ...other } = props;\n  const { t } = useTranslation();\n\n  const {\n    isSending,\n    send,\n    isDifferent,\n    isValid,\n    hasAutoComplet,\n    typeControl,\n    valueControl,\n  } = useLogoForm(value, type, request);\n\n  return (\n    <Stack\n      direction={{ xs: \"column\", md: \"row\" }}\n      spacing={{ xs: 1, sm: 2, md: 4 }}\n      {...other}\n    >\n      <TextField\n        {...typeControl}\n        select\n        label={t(\"logos.type\")}\n        sx={{ minWidth: { xs: \"80%\", sm: 350 } }}\n        size=\"small\"\n      >\n        {logoTypeOptions.map(({ value, labelKey }) => (\n          <MenuItem key={labelKey} value={value}>\n            {t(labelKey)}\n          </MenuItem>\n        ))}\n      </TextField>\n      {hasAutoComplet ? (\n        <LabelFilter\n          showKey\n          {...valueControl}\n          label={t(\"logos.value\")}\n          size=\"small\"\n          sx={{ minWidth: { xs: \"80%\", sm: 350 } }}\n        />\n      ) : (\n        <TextField\n          {...valueControl}\n          label={t(\"logos.value\")}\n          sx={{ minWidth: { xs: \"80%\", sm: 350 } }}\n          size=\"small\"\n        />\n      )}\n      <LoadingButton\n        onClick={send}\n        loading={isSending}\n        disabled={isLoading || !isValid || (updateMode && !isDifferent)}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        {t(\"logos.update\")}\n      </LoadingButton>\n    </Stack>\n  );\n};\nexport default LogoForm;\n","import * as React from \"react\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { getLang } from \"../../localeStorageManager\";\nimport axios from \"axios\";\nimport { URL_ORIGINE } from \"../../const\";\n\n// Otherwise fallback on english\nconst AVAILABLE_OPTIONS = [\"de\", \"es\", \"fr\", \"hr\", \"nl\", \"sv\"];\n\nconst cleanName = (name) =>\n  name\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n    .toLowerCase()\n    .replace(/[^0-9a-z]/gi, \" \");\n\nconst useOptionFetching = (insightType, inputValue, lang) => {\n  const [options, setOptions] = React.useState([]);\n  const fetchedKeysRef = React.useRef({});\n\n  React.useEffect(() => {\n    setOptions([]);\n    fetchedKeysRef.current = {};\n  }, [insightType]);\n\n  React.useEffect(() => {\n    let keyToFetch = inputValue.toLowerCase();\n    if (/^[a-z][a-z]:/.test(keyToFetch)) {\n      keyToFetch = keyToFetch.slice(3);\n    }\n    keyToFetch = keyToFetch.replace(/[^0-9a-z]/gi, \"-\");\n\n    [\n      keyToFetch.slice(0, 1),\n      keyToFetch.slice(0, 2),\n      keyToFetch.slice(0, 3),\n    ].forEach((key) => {\n      if (key.length > 0 && !fetchedKeysRef.current[key]) {\n        fetchedKeysRef.current[key] = true;\n        axios\n          .get(\n            `${URL_ORIGINE}/data/${\n              AVAILABLE_OPTIONS.includes(lang) ? lang : \"en\"\n            }/${insightType}/${key}.json`\n          )\n          .then(({ data }) => {\n            setOptions((prevOptions) => {\n              const existingKeys = prevOptions.map((x) => x.key);\n              return [\n                ...prevOptions,\n                ...data\n                  .filter(({ key }) => !existingKeys.includes(key))\n                  .map((option) => ({\n                    ...option,\n                    cleanName: cleanName(option.name),\n                  })),\n              ];\n            });\n          })\n          .catch(() => {});\n      }\n    });\n  }, [inputValue, insightType, lang]);\n\n  return options;\n};\n\nconst LabelFilter = (props) => {\n  const { showKey, onChange, value, insightType, fullWidth, ...other } = props;\n\n  const [innerValue, setInnerValue] = React.useState(null);\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  const lang = getLang();\n\n  const options = useOptionFetching(insightType, inputValue, lang);\n\n  React.useEffect(() => {\n    setInnerValue((prev) => {\n      if (typeof prev === \"object\" && prev?.key === value) {\n        return prev;\n      }\n      const solution = options.find((option) => option.key === value);\n\n      if (solution) {\n        return solution;\n      }\n      return value;\n    });\n  }, [value, options]);\n\n  return (\n    <Autocomplete\n      fullWidth={fullWidth}\n      freeSolo\n      onChange={(_, newValue) => {\n        setInnerValue(newValue);\n        onChange(newValue?.key ?? newValue);\n      }}\n      onInputChange={(e, newInputValue, reason) => {\n        setInputValue(newInputValue);\n      }}\n      onBlur={() => {\n        const isSelectedValue =\n          typeof innerValue === \"string\"\n            ? innerValue === inputValue\n            : innerValue.name === inputValue;\n        if (!isSelectedValue) {\n          setInnerValue(inputValue);\n          onChange(inputValue);\n        }\n      }}\n      inputValue={inputValue}\n      value={innerValue}\n      options={options}\n      getOptionLabel={(option) => option?.name ?? option}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          {...other}\n          helperText={\n            showKey &&\n            (innerValue?.key ||\n              (innerValue !== \"\" &&\n                innerValue !== null &&\n                `⚠️ unknown: \"${innerValue}\"`))\n          }\n        />\n      )}\n      filterOptions={(options, state) => {\n        return options.filter((option) =>\n          option?.cleanName.includes(cleanName(state.inputValue))\n        );\n      }}\n    />\n  );\n};\n\nexport default LabelFilter;\n","import axios from \"axios\";\n\nexport const addImageFlag = ({ barcode, imgid, url }) => {\n  axios\n    .put(`https://amathjourney.com/api/off-annotation/flag-image/${barcode}`, {\n      mode: \"no-cors\",\n      imgid,\n      url,\n    })\n    .catch(() => {\n      console.log(\"Image flagged\");\n    });\n};\n\nexport const removeImageFlag = ({ barcode, imgid }) => {\n  axios\n    .delete(\n      `https://amathjourney.com/api/off-annotation/flag-image/${barcode}`,\n      {\n        mode: \"no-cors\",\n        data: {\n          imgid,\n        },\n      }\n    )\n    .catch(() => {\n      console.log(\"Something went wrong. Image could not be flagged\");\n    });\n};\n\nconst externalApi = {\n  addImageFlag,\n  removeImageFlag,\n};\n\nexport default externalApi;\n","import * as React from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport LogoForm from \"../../components/LogoForm\";\nimport robotoff from \"../../robotoff\";\nimport offService from \"../../off\";\nimport externalApi from \"../../externalApi\";\nimport { IS_DEVELOPMENT_MODE } from \"../../const.js\";\n\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Stack from \"@mui/material/Stack\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport Box from \"@mui/material/Box\";\n\nimport OutlinedFlagIcon from \"@mui/icons-material/OutlinedFlag\";\nimport FlagIcon from \"@mui/icons-material/Flag\";\n\nimport { useTranslation } from \"react-i18next\";\n\n//  Only for testing purpose\nimport { sleep } from \"../../utils\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst getImageURL = (logo) => offService.getImageUrl(logo.image.source_image);\n\nconst getCropURL = (logo) => {\n  return robotoff.getCroppedImageUrl(getImageURL(logo), logo.bounding_box);\n};\n\nconst UpdateLogoForm = ({\n  logoId,\n  image_id,\n  annotationValue = \"\",\n  annotationType = \"\",\n  imageURL,\n  cropURL,\n  barcode,\n  isLoading,\n}) => {\n  const { t } = useTranslation();\n  const [isImageOpen, setIsImageOpen] = React.useState(false);\n  const [isImageFlagged, setIsImageFlagged] = React.useState(false);\n\n  const request = React.useCallback(\n    (logoId) => async (data) => {\n      if (data == null) {\n        return;\n      }\n      const { type, value } = data;\n      if (IS_DEVELOPMENT_MODE) {\n        await sleep(2000);\n        console.log(`Updated`);\n      } else {\n        await robotoff.updateLogo(logoId, value, type);\n      }\n    },\n    []\n  );\n\n  return (\n    <Box sx={{ margin: \"2% 10%\" }}>\n      <Dialog open={isImageOpen} onClose={() => setIsImageOpen(false)}>\n        <img\n          src={imageURL}\n          alt=\"\"\n          style={{ maxWidth: \"90vw\", maxHeight: \"90vh\" }}\n        />\n      </Dialog>\n      <Stack spacing={2}>\n        <Typography\n          variant=\"h2\"\n          sx={{\n            fontSize: \"1.5rem\",\n            fontWeight: 600,\n            marginBottom: 2,\n          }}\n        >\n          {t(\"logos.detail\")}\n        </Typography>\n        <Typography>\n          {t(\"logos.id\")} {logoId}\n        </Typography>\n        <Typography>\n          {t(\"logos.barcode\")} {barcode}\n        </Typography>\n        <img width=\"300px\" src={cropURL} alt={t(\"logos.crop_image_title\")} />\n        <Stack direction=\"row\">\n          <Button\n            variant=\"contained\"\n            sx={{\n              width: 200,\n              mr: 5,\n            }}\n            onClick={() => {\n              setIsImageOpen(true);\n            }}\n          >\n            {t(\"logos.full_image\")}\n          </Button>\n          {isImageFlagged ? (\n            <Tooltip title={t(\"logos.unflag\")}>\n              <IconButton\n                onClick={() => {\n                  externalApi.deleteImageFlag({ barcode, imgid: image_id });\n                  setIsImageFlagged(false);\n                }}\n              >\n                <FlagIcon />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title={t(\"logos.flag\")}>\n              <IconButton\n                onClick={() => {\n                  externalApi.addImageFlag({\n                    barcode,\n                    imgid: image_id,\n                    url: imageURL,\n                  });\n                  setIsImageFlagged(true);\n                }}\n              >\n                <OutlinedFlagIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n        </Stack>\n        <Divider />\n\n        <LogoForm\n          value={annotationValue}\n          type={annotationType}\n          updateMode\n          request={request(logoId)}\n          isLoading={isLoading}\n        />\n      </Stack>\n    </Box>\n  );\n};\n\nexport default function LogoUpdate() {\n  const { logoId } = useParams();\n  const [fetchedData, setFetchedData] = React.useState({\n    annotationValue: \"\",\n    annotationType: \"\",\n    imageURL: \"\",\n    cropURL: \"\",\n    barcode: \"\",\n    isLoading: false,\n  });\n\n  React.useEffect(() => {\n    let isValid = true;\n    setFetchedData({\n      annotationValue: \"\",\n      annotationType: \"\",\n      imageURL: \"\",\n      image_id: \"\",\n      cropURL: \"\",\n      barcode: \"\",\n      isLoading: true,\n    });\n    robotoff\n      .loadLogo(logoId)\n      .then(({ data }) => {\n        if (!isValid) {\n          return;\n        }\n        setFetchedData({\n          imageURL: getImageURL(data),\n          image_id: data.image.image_id,\n          cropURL: getCropURL(data),\n          annotationValue: data.annotation_value || \"\",\n          annotationType: data.annotation_type || \"\",\n          barcode: data.image.barcode,\n          isLoading: false,\n        });\n      })\n      .catch(() => {\n        if (!isValid) {\n          return;\n        }\n        setFetchedData(() => ({\n          annotationValue: \"\",\n          annotationType: \"\",\n          imageURL: \"\",\n          image_id: \"\",\n          cropURL: \"\",\n          barcode: \"\",\n          isLoading: false,\n        }));\n        this.isLoading = false;\n      });\n    return () => {\n      isValid = false;\n    };\n  }, [logoId]);\n\n  return (\n    <React.Suspense fallback={<CircularProgress />}>\n      <UpdateLogoForm {...fetchedData} logoId={logoId} />\n    </React.Suspense>\n  );\n}\n","import axios from \"axios\";\nimport { ROBOTOFF_API_URL, IS_DEVELOPMENT_MODE } from \"./const\";\nimport { getLang } from \"./localeStorageManager\";\nimport { reformatValueTag, removeEmptyKeys } from \"./utils\";\n\nexport interface QuestionInterface {\n  barcode: string;\n  insight_id: string;\n  insight_type: string;\n  question: string;\n  source_image_url?: string;\n  type: string;\n  value: string;\n  value_tag: string;\n}\n\ntype GetQuestionsResponse = { count: number; questions: QuestionInterface[] };\n\nconst robotoff = {\n  annotate(insightId: string, annotation) {\n    if (IS_DEVELOPMENT_MODE) {\n      console.log(\n        `Annotated, ${ROBOTOFF_API_URL}/insights/annotate`,\n        new URLSearchParams(\n          `insight_id=${insightId}&annotation=${annotation}&update=1`\n        ),\n        { withCredentials: true }\n      );\n    } else {\n      return axios.post(\n        `${ROBOTOFF_API_URL}/insights/annotate`,\n        new URLSearchParams(\n          `insight_id=${insightId}&annotation=${annotation}&update=1`\n        ),\n        { withCredentials: true }\n      );\n    }\n  },\n\n  questionsByProductCode(code: string) {\n    return axios\n      .get<GetQuestionsResponse>(`${ROBOTOFF_API_URL}/questions/${code}`)\n      .then((result) => {\n        let questions = result.data.questions;\n        result.data.questions = questions.filter(\n          (question) => question.source_image_url\n        );\n        return result;\n      });\n  },\n\n  questions(filterState, count = 10, page = 1) {\n    const {\n      insightType,\n      brandFilter,\n      valueTag,\n      countryFilter,\n      sortByPopularity,\n      campaign,\n      predictor,\n    } = filterState;\n\n    const searchParams = {\n      insight_types: insightType,\n      value_tag: valueTag,\n      brands: reformatValueTag(brandFilter),\n      country: countryFilter !== \"en:world\" ? countryFilter : null,\n      campaign,\n      predictor,\n    };\n\n    const lang = getLang();\n\n    return axios.get<GetQuestionsResponse>(\n      `${ROBOTOFF_API_URL}/questions/${\n        sortByPopularity ? \"popular\" : \"random\"\n      }`,\n      {\n        params: removeEmptyKeys({\n          ...searchParams,\n          lang,\n          count,\n          page,\n        }),\n      }\n    );\n  },\n\n  insightDetail(insight_id) {\n    return axios.get(`${ROBOTOFF_API_URL}/insights/detail/${insight_id}`);\n  },\n\n  loadLogo(logoId) {\n    return axios.get(`${ROBOTOFF_API_URL}/images/logos/${logoId}`);\n  },\n\n  updateLogo(logoId, value, type) {\n    return axios.put(\n      `${ROBOTOFF_API_URL}/images/logos/${logoId}`,\n      removeEmptyKeys({\n        value,\n        type,\n      }),\n      { withCredentials: true }\n    );\n  },\n\n  searchLogos(barcode, value, type, count = 25, random = false) {\n    const formattedValue = [\"label\", \"category\"].includes(type)\n      ? { taxonomy_value: value }\n      : { value };\n\n    return axios.get(`${ROBOTOFF_API_URL}/images/logos/search/`, {\n      params: removeEmptyKeys({\n        barcode,\n        type,\n        count,\n        random,\n        ...formattedValue,\n      }),\n    });\n  },\n\n  getLogoAnnotations(logoId, index, count = 25) {\n    const url =\n      logoId.length > 0\n        ? `${ROBOTOFF_API_URL}/ann/search/${logoId}`\n        : `${ROBOTOFF_API_URL}/ann/search`;\n    return axios.get(url, {\n      params: removeEmptyKeys({\n        index,\n        count,\n      }),\n    });\n  },\n\n  annotateLogos(annotations) {\n    return axios.post(\n      `${ROBOTOFF_API_URL}/images/logos/annotate`,\n      removeEmptyKeys({\n        annotations,\n      }),\n      { withCredentials: true }\n    );\n  },\n\n  getInsights(\n    barcode = \"\",\n    insightType = \"\",\n    valueTag = \"\",\n    annotation = \"\",\n    page = 1,\n    count = 25\n  ) {\n    let annotated;\n    if (annotation.length && annotation === \"not_annotated\") {\n      annotated = \"0\";\n      annotation = \"\";\n    }\n    return axios.get(`${ROBOTOFF_API_URL}/insights`, {\n      params: removeEmptyKeys({\n        barcode,\n        insight_types: insightType,\n        value_tag: valueTag,\n        annotation,\n        page,\n        annotated,\n        count,\n      }),\n    });\n  },\n\n  getUserStatistics(username) {\n    return axios.get(`${ROBOTOFF_API_URL}/users/statistics/${username}`);\n  },\n\n  getCroppedImageUrl(imageUrl, boundingBox) {\n    const [y_min, x_min, y_max, x_max] = boundingBox;\n    return `${ROBOTOFF_API_URL}/images/crop?image_url=${imageUrl}&y_min=${y_min}&x_min=${x_min}&y_max=${y_max}&x_max=${x_max}`;\n  },\n\n  getLogosImages(logoIds) {\n    return axios.get(\n      `${ROBOTOFF_API_URL}/images/logos?logo_ids=${logoIds.join(\",\")}`\n    );\n  },\n\n  getNutritionValueFromImage(language, imageOcrUrl, images) {\n    var ocrUrlSubString = imageOcrUrl.split(\"/\");\n\n    // setting a default value, assuming length of ocrUrlSubString is 7,\n    // and product code is 8 characters long\n    var productCodeForOcrUrl = ocrUrlSubString[5];\n\n    let nutritionKeyWithLangSuffix = `nutrition_${language}`;\n\n    for (var key in images) {\n      if (nutritionKeyWithLangSuffix === key) {\n        var imgid = images[nutritionKeyWithLangSuffix].imgid;\n      }\n    }\n\n    if (ocrUrlSubString.length > 7) {\n      // the productCode is 13 characters long\n      productCodeForOcrUrl =\n        ocrUrlSubString[5] +\n        \"/\" +\n        ocrUrlSubString[6] +\n        \"/\" +\n        ocrUrlSubString[7] +\n        \"/\" +\n        ocrUrlSubString[8];\n    }\n\n    return axios.get(\n      `${ROBOTOFF_API_URL}/predict/nutrient?ocr_url=https://images.openfoodfacts.org/images/products/${productCodeForOcrUrl}/${imgid}.json`\n    );\n  },\n\n  getUnansweredValues(params: {\n    type: \"label\" | \"brand\" | \"category\";\n    country;\n    campaign;\n    page?: number;\n    count?: number;\n  }) {\n    let page = params.page ?? 1;\n    page = page >= 1 ? page : 1;\n\n    return axios.get(\n      `${ROBOTOFF_API_URL}/questions/unanswered/?${Object.keys({\n        ...params,\n        page,\n      })\n        .filter((key) => params[key] !== undefined)\n        .map((key) => `${key}=${params[key]}`)\n        .join(\"&\")}`\n    );\n  },\n};\n\nexport default robotoff;\n","const reformatTagMapping = {\n  \" \": \"-\",\n  \"'\": \"-\",\n  \"&\": \"\",\n  à: \"a\",\n  â: \"a\",\n  ä: \"a\",\n  é: \"e\",\n  è: \"e\",\n  ê: \"e\",\n  ë: \"e\",\n  î: \"i\",\n  ï: \"i\",\n  ô: \"o\",\n  ö: \"o\",\n  û: \"u\",\n  ù: \"u\",\n  ü: \"u\",\n};\n\nexport const reformatValueTag = (value) => {\n  if (!value) {\n    return value;\n  }\n  let output = value.trim().toLowerCase();\n  for (const [search, replace] of Object.entries(reformatTagMapping)) {\n    output = output.replace(new RegExp(search, \"g\"), replace);\n  }\n  output = output.replace(/-{2,}/g, \"-\");\n  return output;\n};\n\nexport const removeEmptyKeys = (obj) => {\n  Object.keys(obj).forEach(\n    (key) => (obj[key] == null || obj[key] === \"\") && delete obj[key]\n  );\n  return obj;\n};\n\n//  Only for testing purpose\nexport function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n//to provide capitalised country name; en:france => France\nexport const capitaliseName = (string) => {\n  if (!string) {\n    return string;\n  }\n  let name = string.slice(3);\n  return name.charAt(0).toUpperCase() + name.slice(1);\n};\n"],"names":["TYPE_WITHOUT_VALUE","logoTypeOptions","value","labelKey","isValidAnnotation","type","length","includes","getFormattedValues","formattedValue","toLowerCase","trim","props","updateMode","request","isLoading","other","t","useTranslation","React","isSending","setIsSending","innerValue","setInnerValue","innerType","setInnerType","send","isDifferent","isValid","hasAutoComplet","typeControl","onChange","event","target","valueControl","insightType","undefined","newValue","useLogoForm","direction","xs","md","spacing","sm","select","label","sx","minWidth","size","map","showKey","onClick","loading","disabled","variant","color","AVAILABLE_OPTIONS","cleanName","name","normalize","replace","fullWidth","inputValue","setInputValue","lang","getLang","options","setOptions","fetchedKeysRef","current","keyToFetch","test","slice","forEach","key","axios","URL_ORIGINE","then","data","prevOptions","existingKeys","x","filter","option","catch","useOptionFetching","prev","solution","find","freeSolo","_","onInputChange","e","newInputValue","reason","onBlur","getOptionLabel","renderInput","params","helperText","filterOptions","state","externalApi","addImageFlag","barcode","imgid","url","mode","console","log","removeImageFlag","getImageURL","logo","offService","image","source_image","UpdateLogoForm","logoId","image_id","annotationValue","annotationType","imageURL","cropURL","isImageOpen","setIsImageOpen","isImageFlagged","setIsImageFlagged","IS_DEVELOPMENT_MODE","sleep","robotoff","margin","open","onClose","src","alt","style","maxWidth","maxHeight","fontSize","fontWeight","marginBottom","width","mr","title","LogoUpdate","useParams","fetchedData","setFetchedData","bounding_box","annotation_value","annotation_type","fallback","annotate","insightId","annotation","ROBOTOFF_API_URL","URLSearchParams","withCredentials","questionsByProductCode","code","result","questions","question","source_image_url","filterState","count","page","brandFilter","valueTag","countryFilter","sortByPopularity","campaign","predictor","searchParams","insight_types","value_tag","brands","reformatValueTag","country","removeEmptyKeys","insightDetail","insight_id","loadLogo","updateLogo","searchLogos","random","taxonomy_value","getLogoAnnotations","index","annotateLogos","annotations","getInsights","annotated","getUserStatistics","username","getCroppedImageUrl","imageUrl","boundingBox","y_min","x_min","y_max","x_max","getLogosImages","logoIds","join","getNutritionValueFromImage","language","imageOcrUrl","images","ocrUrlSubString","split","productCodeForOcrUrl","nutritionKeyWithLangSuffix","getUnansweredValues","Object","keys","reformatTagMapping","à","â","ä","é","è","ê","ë","î","ï","ô","ö","û","ù","ü","output","entries","search","RegExp","obj","ms","Promise","resolve","setTimeout","capitaliseName","string","charAt","toUpperCase"],"sourceRoot":""}